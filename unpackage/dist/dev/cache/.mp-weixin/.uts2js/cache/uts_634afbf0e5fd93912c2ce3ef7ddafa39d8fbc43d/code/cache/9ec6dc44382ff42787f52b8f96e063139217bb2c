{"code":"/**\n * @1900-2100区间内的公历、农历互转\n * @charset UTF-8\n * @Author  Jea杨(JJonline@JJonline.Cn)\n * @Time    2014-7-21\n * @Time    2016-8-13 Fixed 2033hex、Attribution Annals\n * @Time    2016-9-25 Fixed lunar LeapMonth Param Bug\n * @Time    2017-7-24 Fixed use getTerm Func Param Error.use solar year,NOT lunar year\n * @Version 1.0.3\n * @公历转农历：calendar.solar2lunar(1987,11,01); //[you can ignore params of prefix 0]\n * @农历转公历：calendar.lunar2solar(1987,09,10); //[you can ignore params of prefix 0]\n */\n/**\n * 农历1900-2100的润大小信息表\n * @Array Of Property\n * @return Hex\n */\nconst lunarInfo = [\n    0x04bd8,\n    0x04ae0,\n    0x0a570,\n    0x054d5,\n    0x0d260,\n    0x0d950,\n    0x16554,\n    0x056a0,\n    0x09ad0,\n    0x055d2,\n    0x04ae0,\n    0x0a5b6,\n    0x0a4d0,\n    0x0d250,\n    0x1d255,\n    0x0b540,\n    0x0d6a0,\n    0x0ada2,\n    0x095b0,\n    0x14977,\n    0x04970,\n    0x0a4b0,\n    0x0b4b5,\n    0x06a50,\n    0x06d40,\n    0x1ab54,\n    0x02b60,\n    0x09570,\n    0x052f2,\n    0x04970,\n    0x06566,\n    0x0d4a0,\n    0x0ea50,\n    0x16a95,\n    0x05ad0,\n    0x02b60,\n    0x186e3,\n    0x092e0,\n    0x1c8d7,\n    0x0c950,\n    0x0d4a0,\n    0x1d8a6,\n    0x0b550,\n    0x056a0,\n    0x1a5b4,\n    0x025d0,\n    0x092d0,\n    0x0d2b2,\n    0x0a950,\n    0x0b557,\n    0x06ca0,\n    0x0b550,\n    0x15355,\n    0x04da0,\n    0x0a5b0,\n    0x14573,\n    0x052b0,\n    0x0a9a8,\n    0x0e950,\n    0x06aa0,\n    0x0aea6,\n    0x0ab50,\n    0x04b60,\n    0x0aae4,\n    0x0a570,\n    0x05260,\n    0x0f263,\n    0x0d950,\n    0x05b57,\n    0x056a0,\n    0x096d0,\n    0x04dd5,\n    0x04ad0,\n    0x0a4d0,\n    0x0d4d4,\n    0x0d250,\n    0x0d558,\n    0x0b540,\n    0x0b6a0,\n    0x195a6,\n    0x095b0,\n    0x049b0,\n    0x0a974,\n    0x0a4b0,\n    0x0b27a,\n    0x06a50,\n    0x06d40,\n    0x0af46,\n    0x0ab60,\n    0x09570,\n    0x04af5,\n    0x04970,\n    0x064b0,\n    0x074a3,\n    0x0ea50,\n    0x06b58,\n    0x05ac0,\n    0x0ab60,\n    0x096d5,\n    0x092e0,\n    0x0c960,\n    0x0d954,\n    0x0d4a0,\n    0x0da50,\n    0x07552,\n    0x056a0,\n    0x0abb7,\n    0x025d0,\n    0x092d0,\n    0x0cab5,\n    0x0a950,\n    0x0b4a0,\n    0x0baa4,\n    0x0ad50,\n    0x055d9,\n    0x04ba0,\n    0x0a5b0,\n    0x15176,\n    0x052b0,\n    0x0a930,\n    0x07954,\n    0x06aa0,\n    0x0ad50,\n    0x05b52,\n    0x04b60,\n    0x0a6e6,\n    0x0a4e0,\n    0x0d260,\n    0x0ea65,\n    0x0d530,\n    0x05aa0,\n    0x076a3,\n    0x096d0,\n    0x04afb,\n    0x04ad0,\n    0x0a4d0,\n    0x1d0b6,\n    0x0d250,\n    0x0d520,\n    0x0dd45,\n    0x0b5a0,\n    0x056d0,\n    0x055b2,\n    0x049b0,\n    0x0a577,\n    0x0a4b0,\n    0x0aa50,\n    0x1b255,\n    0x06d20,\n    0x0ada0,\n    /**Add By JJonline@JJonline.Cn**/\n    0x14b63,\n    0x09370,\n    0x049f8,\n    0x04970,\n    0x064b0,\n    0x168a6,\n    0x0ea50,\n    0x06b20,\n    0x1a6c4,\n    0x0aae0,\n    0x092e0,\n    0x0d2e3,\n    0x0c960,\n    0x0d557,\n    0x0d4a0,\n    0x0da50,\n    0x05d55,\n    0x056a0,\n    0x0a6d0,\n    0x055d4,\n    0x052d0,\n    0x0a9b8,\n    0x0a950,\n    0x0b4a0,\n    0x0b6a6,\n    0x0ad50,\n    0x055a0,\n    0x0aba4,\n    0x0a5b0,\n    0x052b0,\n    0x0b273,\n    0x06930,\n    0x07337,\n    0x06aa0,\n    0x0ad50,\n    0x14b55,\n    0x04b60,\n    0x0a570,\n    0x054e4,\n    0x0d160,\n    0x0e968,\n    0x0d520,\n    0x0daa0,\n    0x16aa6,\n    0x056d0,\n    0x04ae0,\n    0x0a9d4,\n    0x0a2d0,\n    0x0d150,\n    0x0f252,\n    0x0d520,\n]; //2100\n/**\n * 公历每个月份的天数普通表\n * @Array Of Property\n * @return Number\n */\nconst solarMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n/**\n * 天干地支之天干速查表\n * @Array Of Property trans[\"甲\",\"乙\",\"丙\",\"丁\",\"戊\",\"己\",\"庚\",\"辛\",\"壬\",\"癸\"]\n * @return Cn string\n */\nconst Gan = [\n    '\\u7532',\n    '\\u4E59',\n    '\\u4E19',\n    '\\u4E01',\n    '\\u620A',\n    '\\u5DF1',\n    '\\u5E9A',\n    '\\u8F9B',\n    '\\u58EC',\n    '\\u7678',\n];\n/**\n * 天干地支之地支速查表\n * @Array Of Property\n * @trans[\"子\",\"丑\",\"寅\",\"卯\",\"辰\",\"巳\",\"午\",\"未\",\"申\",\"酉\",\"戌\",\"亥\"]\n * @return Cn string\n */\nconst Zhi = [\n    '\\u5B50',\n    '\\u4E11',\n    '\\u5BC5',\n    '\\u536F',\n    '\\u8FB0',\n    '\\u5DF3',\n    '\\u5348',\n    '\\u672A',\n    '\\u7533',\n    '\\u9149',\n    '\\u620C',\n    '\\u4EA5',\n];\n/**\n * 天干地支之地支速查表<=>生肖\n * @Array Of Property\n * @trans[\"鼠\",\"牛\",\"虎\",\"兔\",\"龙\",\"蛇\",\"马\",\"羊\",\"猴\",\"鸡\",\"狗\",\"猪\"]\n * @return Cn string\n */\nconst Animals = [\n    '\\u9F20',\n    '\\u725B',\n    '\\u864E',\n    '\\u5154',\n    '\\u9F99',\n    '\\u86C7',\n    '\\u9A6C',\n    '\\u7F8A',\n    '\\u7334',\n    '\\u9E21',\n    '\\u72D7',\n    '\\u732A',\n];\n/**\n * 阳历节日\n */\nlet festival = {\n    '1-1': { title: '元旦节' },\n    '2-14': { title: '情人节' },\n    '5-1': { title: '劳动节' },\n    '5-4': { title: '青年节' },\n    '6-1': { title: '儿童节' },\n    '9-10': { title: '教师节' },\n    '10-1': { title: '国庆节' },\n    '12-25': { title: '圣诞节' },\n    '3-8': { title: '妇女节' },\n    '3-12': { title: '植树节' },\n    '4-1': { title: '愚人节' },\n    '5-12': { title: '护士节' },\n    '7-1': { title: '建党节' },\n    '8-1': { title: '建军节' },\n    '12-24': { title: '平安夜' },\n};\n/**\n * 农历节日\n */\nlet lFestival = {\n    '12-30': { title: '除夕' },\n    '1-1': { title: '春节' },\n    '1-15': { title: '元宵节' },\n    '2-2': { title: '龙抬头' },\n    '5-5': { title: '端午节' },\n    '7-7': { title: '七夕节' },\n    '7-15': { title: '中元节' },\n    '8-15': { title: '中秋节' },\n    '9-9': { title: '重阳节' },\n    '10-1': { title: '寒衣节' },\n    '10-15': { title: '下元节' },\n    '12-8': { title: '腊八节' },\n    '12-23': { title: '北方小年' },\n    '12-24': { title: '南方小年' },\n};\n/**\n * 24节气速查表\n * @Array Of Property\n * @trans[\"小寒\",\"大寒\",\"立春\",\"雨水\",\"惊蛰\",\"春分\",\"清明\",\"谷雨\",\"立夏\",\"小满\",\"芒种\",\"夏至\",\"小暑\",\"大暑\",\"立秋\",\"处暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\"立冬\",\"小雪\",\"大雪\",\"冬至\"]\n * @return Cn string\n */\nconst solarTerm = [\n    '\\u5C0F\\u5BD2',\n    '\\u5927\\u5BD2',\n    '\\u7ACB\\u6625',\n    '\\u96E8\\u6C34',\n    '\\u60CA\\u86F0',\n    '\\u6625\\u5206',\n    '\\u6E05\\u660E',\n    '\\u8C37\\u96E8',\n    '\\u7ACB\\u590F',\n    '\\u5C0F\\u6EE1',\n    '\\u8292\\u79CD',\n    '\\u590F\\u81F3',\n    '\\u5C0F\\u6691',\n    '\\u5927\\u6691',\n    '\\u7ACB\\u79CB',\n    '\\u5904\\u6691',\n    '\\u767D\\u9732',\n    '\\u79CB\\u5206',\n    '\\u5BD2\\u9732',\n    '\\u971C\\u964D',\n    '\\u7ACB\\u51AC',\n    '\\u5C0F\\u96EA',\n    '\\u5927\\u96EA',\n    '\\u51AC\\u81F3',\n];\n/**\n * 1900-2100各年的24节气日期速查表\n * @Array Of Property\n * @return 0x string For splice\n */\nconst sTermInfo = [\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c3598082c95f8c965cc920f',\n    '97bd0b06bdb0722c965ce1cfcc920f',\n    'b027097bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c359801ec95f8c965cc920f',\n    '97bd0b06bdb0722c965ce1cfcc920f',\n    'b027097bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c359801ec95f8c965cc920f',\n    '97bd0b06bdb0722c965ce1cfcc920f',\n    'b027097bd097c36b0b6fc9274c91aa',\n    '9778397bd19801ec9210c965cc920e',\n    '97b6b97bd19801ec95f8c965cc920f',\n    '97bd09801d98082c95f8e1cfcc920f',\n    '97bd097bd097c36b0b6fc9210c8dc2',\n    '9778397bd197c36c9210c9274c91aa',\n    '97b6b97bd19801ec95f8c965cc920e',\n    '97bd09801d98082c95f8e1cfcc920f',\n    '97bd097bd097c36b0b6fc9210c8dc2',\n    '9778397bd097c36c9210c9274c91aa',\n    '97b6b97bd19801ec95f8c965cc920e',\n    '97bcf97c3598082c95f8e1cfcc920f',\n    '97bd097bd097c36b0b6fc9210c8dc2',\n    '9778397bd097c36c9210c9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c3598082c95f8c965cc920f',\n    '97bd097bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c3598082c95f8c965cc920f',\n    '97bd097bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c359801ec95f8c965cc920f',\n    '97bd097bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c359801ec95f8c965cc920f',\n    '97bd097bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf97c359801ec95f8c965cc920f',\n    '97bd097bd07f595b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9210c8dc2',\n    '9778397bd19801ec9210c9274c920e',\n    '97b6b97bd19801ec95f8c965cc920f',\n    '97bd07f5307f595b0b0bc920fb0722',\n    '7f0e397bd097c36b0b6fc9210c8dc2',\n    '9778397bd097c36c9210c9274c920e',\n    '97b6b97bd19801ec95f8c965cc920f',\n    '97bd07f5307f595b0b0bc920fb0722',\n    '7f0e397bd097c36b0b6fc9210c8dc2',\n    '9778397bd097c36c9210c9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bd07f1487f595b0b0bc920fb0722',\n    '7f0e397bd097c36b0b6fc9210c8dc2',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf7f1487f595b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf7f1487f595b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf7f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c965cc920e',\n    '97bcf7f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b97bd19801ec9210c9274c920e',\n    '97bcf7f0e47f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '9778397bd097c36b0b6fc9210c91aa',\n    '97b6b97bd197c36c9210c9274c920e',\n    '97bcf7f0e47f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '9778397bd097c36b0b6fc9210c8dc2',\n    '9778397bd097c36c9210c9274c920e',\n    '97b6b7f0e47f531b0723b0b6fb0722',\n    '7f0e37f5307f595b0b0bc920fb0722',\n    '7f0e397bd097c36b0b6fc9210c8dc2',\n    '9778397bd097c36b0b70c9274c91aa',\n    '97b6b7f0e47f531b0723b0b6fb0721',\n    '7f0e37f1487f595b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc9210c8dc2',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f595b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '9778397bd097c36b0b6fc9274c91aa',\n    '97b6b7f0e47f531b0723b0787b0721',\n    '7f0e27f0e47f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '9778397bd097c36b0b6fc9210c91aa',\n    '97b6b7f0e47f149b0723b0787b0721',\n    '7f0e27f0e47f531b0723b0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '9778397bd097c36b0b6fc9210c8dc2',\n    '977837f0e37f149b0723b0787b0721',\n    '7f07e7f0e47f531b0723b0b6fb0722',\n    '7f0e37f5307f595b0b0bc920fb0722',\n    '7f0e397bd097c35b0b6fc9210c8dc2',\n    '977837f0e37f14998082b0787b0721',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e37f1487f595b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc9210c8dc2',\n    '977837f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '977837f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd097c35b0b6fc920fb0722',\n    '977837f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '977837f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '977837f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f149b0723b0787b0721',\n    '7f0e27f0e47f531b0b0bb0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '977837f0e37f14998082b0723b06bd',\n    '7f07e7f0e37f149b0723b0787b0721',\n    '7f0e27f0e47f531b0723b0b6fb0722',\n    '7f0e397bd07f595b0b0bc920fb0722',\n    '977837f0e37f14898082b0723b02d5',\n    '7ec967f0e37f14998082b0787b0721',\n    '7f07e7f0e47f531b0723b0b6fb0722',\n    '7f0e37f1487f595b0b0bb0b6fb0722',\n    '7f0e37f0e37f14898082b0723b02d5',\n    '7ec967f0e37f14998082b0787b0721',\n    '7f07e7f0e47f531b0723b0b6fb0722',\n    '7f0e37f1487f531b0b0bb0b6fb0722',\n    '7f0e37f0e37f14898082b0723b02d5',\n    '7ec967f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e37f1487f531b0b0bb0b6fb0722',\n    '7f0e37f0e37f14898082b072297c35',\n    '7ec967f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e37f0e37f14898082b072297c35',\n    '7ec967f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e37f0e366aa89801eb072297c35',\n    '7ec967f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f149b0723b0787b0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n    '7f0e37f0e366aa89801eb072297c35',\n    '7ec967f0e37f14998082b0723b06bd',\n    '7f07e7f0e47f149b0723b0787b0721',\n    '7f0e27f0e47f531b0723b0b6fb0722',\n    '7f0e37f0e366aa89801eb072297c35',\n    '7ec967f0e37f14998082b0723b06bd',\n    '7f07e7f0e37f14998083b0787b0721',\n    '7f0e27f0e47f531b0723b0b6fb0722',\n    '7f0e37f0e366aa89801eb072297c35',\n    '7ec967f0e37f14898082b0723b02d5',\n    '7f07e7f0e37f14998082b0787b0721',\n    '7f07e7f0e47f531b0723b0b6fb0722',\n    '7f0e36665b66aa89801e9808297c35',\n    '665f67f0e37f14898082b0723b02d5',\n    '7ec967f0e37f14998082b0787b0721',\n    '7f07e7f0e47f531b0723b0b6fb0722',\n    '7f0e36665b66a449801e9808297c35',\n    '665f67f0e37f14898082b0723b02d5',\n    '7ec967f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e36665b66a449801e9808297c35',\n    '665f67f0e37f14898082b072297c35',\n    '7ec967f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e26665b66a449801e9808297c35',\n    '665f67f0e37f1489801eb072297c35',\n    '7ec967f0e37f14998082b0787b06bd',\n    '7f07e7f0e47f531b0723b0b6fb0721',\n    '7f0e27f1487f531b0b0bb0b6fb0722',\n];\n/**\n * 数字转中文速查表\n * @Array Of Property\n * @trans ['日','一','二','三','四','五','六','七','八','九','十']\n * @return Cn string\n */\nconst nStr1 = [\n    '\\u65E5',\n    '\\u4E00',\n    '\\u4E8C',\n    '\\u4E09',\n    '\\u56DB',\n    '\\u4E94',\n    '\\u516D',\n    '\\u4E03',\n    '\\u516B',\n    '\\u4E5D',\n    '\\u5341',\n];\n/**\n * 日期转农历称呼速查表\n * @Array Of Property\n * @trans ['初','十','廿','卅']\n * @return Cn string\n */\nconst nStr2 = ['\\u521D', '\\u5341', '\\u5EFF', '\\u5345'];\n/**\n * 月份转农历称呼速查表\n * @Array Of Property\n * @trans ['正','一','二','三','四','五','六','七','八','九','十','冬','腊']\n * @return Cn string\n */\nconst nStr3 = [\n    '\\u6B63',\n    '\\u4E8C',\n    '\\u4E09',\n    '\\u56DB',\n    '\\u4E94',\n    '\\u516D',\n    '\\u4E03',\n    '\\u516B',\n    '\\u4E5D',\n    '\\u5341',\n    '\\u51AC',\n    '\\u814A',\n];\n/**\n * 返回默认定义的阳历节日\n */\nexport const getFestival = () => {\n    return festival;\n};\n/**\n * 返回默认定义的内容里节日\n */\nexport const getLunarFestival = () => {\n    return lFestival;\n};\n/**\n *\n * @param param {Object} 按照festival的格式输入数据，设置阳历节日\n */\nexport const setFestival = (param = {}) => {\n    festival = param;\n};\n/**\n *\n * @param param {Object} 按照lFestival的格式输入数据，设置农历节日\n */\nexport const setLunarFestival = (param = {}) => {\n    lFestival = param;\n};\n/**\n * 返回农历y年一整年的总天数\n * @param y lunar Year\n * @return Number\n * @eg:var count = calendar.lYearDays(1987) ;//count=387\n */\nexport const lYearDays = (y) => {\n    let i, sum = 348;\n    for (i = 0x8000; i > 0x8; i >>= 1) {\n        sum += lunarInfo[y - 1900] & i ? 1 : 0;\n    }\n    return sum + leapDays(y);\n};\n/**\n * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\n * @param y lunar Year\n * @return Number (0-12)\n * @eg:var leapMonth = calendar.leapMonth(1987) ;//leapMonth=6\n */\nexport const leapMonth = (y) => {\n    //闰字编码 \\u95f0\n    return lunarInfo[y - 1900] & 0xf;\n};\n/**\n * 返回农历y年闰月的天数 若该年没有闰月则返回0\n * @param y lunar Year\n * @return Number (0、29、30)\n * @eg:var leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29\n */\nexport const leapDays = (y) => {\n    if (leapMonth(y)) {\n        return lunarInfo[y - 1900] & 0x10000 ? 30 : 29;\n    }\n    return 0;\n};\n/**\n * 返回农历y年m月（非闰月）的总天数，计算m为闰月时的天数请使用leapDays方法\n * @param y lunar Year\n * @param m lunar Month\n * @return Number (-1、29、30)\n * @eg:var MonthDay = calendar.monthDays(1987,9) ;//MonthDay=29\n */\nexport const monthDays = (y, m) => {\n    if (m > 12 || m < 1) {\n        return -1;\n    } //月份参数从1至12，参数错误返回-1\n    return lunarInfo[y - 1900] & (0x10000 >> m) ? 30 : 29;\n};\n/**\n * 返回公历(!)y年m月的天数\n * @param y solar Year\n * @param m solar Month\n * @return Number (-1、28、29、30、31)\n * @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30\n */\nexport const solarDays = (y, m) => {\n    if (m > 12 || m < 1) {\n        return -1;\n    } //若参数错误 返回-1\n    const ms = m - 1;\n    if (ms === 1) {\n        //2月份的闰平规律测算后确认返回28或29\n        return (y % 4 === 0 && y % 100 !== 0) || y % 400 === 0 ? 29 : 28;\n    }\n    else {\n        return solarMonth[ms];\n    }\n};\n/**\n * 农历年份转换为干支纪年\n * @param  lYear 农历年的年份数\n * @return Cn string\n */\nexport const toGanZhiYear = (lYear) => {\n    let ganKey = (lYear - 3) % 10;\n    let zhiKey = (lYear - 3) % 12;\n    if (ganKey === 0)\n        ganKey = 10; //如果余数为0则为最后一个天干\n    if (zhiKey === 0)\n        zhiKey = 12; //如果余数为0则为最后一个地支\n    return Gan[ganKey - 1] + Zhi[zhiKey - 1];\n};\n/**\n * 公历月、日判断所属星座\n * @param  cMonth [description]\n * @param  cDay [description]\n * @return Cn string\n */\nexport const toAstro = (cMonth, cDay) => {\n    const s = '\\u9B54\\u7FAF\\u6C34\\u74F6\\u53CC\\u9C7C\\u767D\\u7F8A\\u91D1\\u725B\\u53CC\\u5B50\\u5DE8\\u87F9\\u72EE\\u5B50\\u5904\\u5973\\u5929\\u79E4\\u5929\\u874E\\u5C04\\u624B\\u9B54\\u7FAF';\n    const arr = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];\n    return `${s.slice(cMonth * 2 - (cDay < arr[cMonth - 1] ? 2 : 0), 2)}\\u5EA7`; //座\n};\n/**\n * 传入offset偏移量返回干支\n * @param offset 相对甲子的偏移量\n * @return Cn string\n */\nexport const toGanZhi = (offset) => {\n    return Gan[offset % 10] + Zhi[offset % 12];\n};\n/**\n * 传入公历(!)y年获得该年第n个节气的公历日期\n * @param y y公历年(1900-2100)\n * @param n n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起\n * @return day Number\n * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春\n */\nexport const getTerm = (y, n) => {\n    if (y < 1900 || y > 2100 || n < 1 || n > 24) {\n        return -1;\n    }\n    const _table = sTermInfo[y - 1900];\n    const _calcDay = [];\n    for (let index = 0; index < _table.length; index += 5) {\n        const chunk = Number.parseInt(`0x${_table.slice(index, 5)}`).toString();\n        _calcDay.push(chunk[0], chunk.slice(1, 2), chunk[3], chunk.slice(4, 2));\n    }\n    return Number.parseInt(_calcDay[n - 1]);\n};\n/**\n * 传入农历数字月份返回汉语通俗表示法\n * @param m lunar month\n * @return Cn string\n * @eg:var cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'\n */\nexport const toChinaMonth = (m) => {\n    // 月 => \\u6708\n    if (m > 12 || m < 1) {\n        return -1;\n    } //若参数错误 返回-1\n    let s = nStr3[m - 1];\n    s += '\\u6708'; //加上月字\n    return s;\n};\n/**\n * 传入农历日期数字返回汉字表示法\n * @param d lunar day\n * @return Cn string\n * @eg:var cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'\n */\nexport const toChinaDay = (d) => {\n    //日 => \\u65e5\n    let s;\n    switch (d) {\n        case 10:\n            s = '\\u521D\\u5341';\n            break;\n        case 20:\n            s = '\\u4E8C\\u5341';\n            break;\n        case 30:\n            s = '\\u4E09\\u5341';\n            break;\n        default:\n            s = nStr2[Math.floor(d / 10)];\n            s += nStr1[d % 10];\n    }\n    return s;\n};\n/**\n * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\n * @param y year\n * @return Cn string\n * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'\n */\nexport const getAnimal = (y) => {\n    return Animals[(y - 4) % 12];\n};\n/**\n * 传入阳历年月日获得详细的公历、农历object信息 <=>JSON\n * !important! 公历参数区间1900.1.31~2100.12.31\n * @param yPara  solar year\n * @param mPara  solar month\n * @param dPara  solar day\n * @return JSON object\n * @eg:uni.__f__('log','at uni_modules/tuniaoui-vue3/components/calendar/libs/lunar-calendar/index.ts:873',calendar.solar2lunar(1987,11,01));\n */\nexport const solar2lunar = (yPara, mPara, dPara) => {\n    let y = typeof yPara === 'string' ? Number.parseInt(yPara) : yPara;\n    let m = typeof mPara === 'string' ? Number.parseInt(mPara) : mPara;\n    let d = typeof dPara === 'string' ? Number.parseInt(dPara) : dPara;\n    //年份限定、上限\n    if (y < 1900 || y > 2100) {\n        return -1; // undefined转换为数字变为NaN\n    }\n    //公历传参最下限\n    if (y === 1900 && m === 1 && d < 31) {\n        return -1;\n    }\n    //未传参  获得当天\n    let objDate;\n    if (!y) {\n        objDate = new Date();\n    }\n    else {\n        objDate = new Date(y, m - 1, d);\n    }\n    let i, leap = 0, temp = 0;\n    //修正ymd参数\n    y = objDate.getFullYear();\n    m = objDate.getMonth() + 1;\n    d = objDate.getDate();\n    let offset = (Date.UTC(objDate.getFullYear(), objDate.getMonth(), objDate.getDate()) -\n        Date.UTC(1900, 0, 31)) /\n        86400000;\n    for (i = 1900; i < 2101 && offset > 0; i++) {\n        temp = lYearDays(i);\n        offset -= temp;\n    }\n    if (offset < 0) {\n        offset += temp;\n        i--;\n    }\n    //是否今天\n    let isTodayObj = new Date(), isToday = false;\n    if (isTodayObj.getFullYear() === y &&\n        isTodayObj.getMonth() + 1 === m &&\n        isTodayObj.getDate() === d) {\n        isToday = true;\n    }\n    //星期几\n    let nWeek = objDate.getDay(), cWeek = nStr1[nWeek];\n    //数字表示周几顺应天朝周一开始的惯例\n    if (nWeek === 0) {\n        nWeek = 7;\n    }\n    //农历年\n    const year = i;\n    leap = leapMonth(i); //闰哪个月\n    let isLeap = false;\n    //效验闰月\n    for (i = 1; i < 13 && offset > 0; i++) {\n        //闰月\n        if (leap > 0 && i === leap + 1 && isLeap === false) {\n            --i;\n            isLeap = true;\n            temp = leapDays(year); //计算农历闰月天数\n        }\n        else {\n            temp = monthDays(year, i); //计算农历普通月天数\n        }\n        //解除闰月\n        if (isLeap === true && i === leap + 1) {\n            isLeap = false;\n        }\n        offset -= temp;\n    }\n    // 闰月导致数组下标重叠取反\n    if (offset === 0 && leap > 0 && i === leap + 1) {\n        if (isLeap) {\n            isLeap = false;\n        }\n        else {\n            isLeap = true;\n            --i;\n        }\n    }\n    if (offset < 0) {\n        offset += temp;\n        --i;\n    }\n    //农历月\n    const month = i;\n    //农历日\n    const day = offset + 1;\n    //天干地支处理\n    const sm = m - 1;\n    const gzY = toGanZhiYear(year);\n    // 当月的两个节气\n    // bugfix-2017-7-24 11:03:38 use lunar Year Param `y` Not `year`\n    const firstNode = getTerm(y, m * 2 - 1); //返回当月「节」为几日开始\n    const secondNode = getTerm(y, m * 2); //返回当月「节」为几日开始\n    // 依据12节气修正干支月\n    let gzM = toGanZhi((y - 1900) * 12 + m + 11);\n    if (d >= firstNode) {\n        gzM = toGanZhi((y - 1900) * 12 + m + 12);\n    }\n    //传入的日期的节气与否\n    let isTerm = false;\n    let Term = null;\n    if (firstNode === d) {\n        isTerm = true;\n        Term = solarTerm[m * 2 - 2];\n    }\n    if (secondNode === d) {\n        isTerm = true;\n        Term = solarTerm[m * 2 - 1];\n    }\n    //日柱 当月一日与 1900/1/1 相差天数\n    const dayCyclical = Date.UTC(y, sm, 1, 0, 0, 0, 0) / 86400000 + 25567 + 10;\n    const gzD = toGanZhi(dayCyclical + d - 1);\n    //该日期所属的星座\n    const astro = toAstro(m, d);\n    const solarDate = `${y}-${m}-${d}`;\n    const lunarDate = `${year}-${month}-${day}`;\n    const festivalDate = `${m}-${d}`;\n    let lunarFestivalDate = `${month}-${day}`;\n    // bugfix https://github.com/jjonline/calendar.js/issues/29\n    // 农历节日修正：农历12月小月则29号除夕，大月则30号除夕\n    // 此处取巧修正：当前为农历12月29号时增加一次判断并且把lunarFestivalDate设置为12-30以正确取得除夕\n    // 天朝农历节日遇闰月过前不过后的原则，此处取农历12月天数不考虑闰月\n    // 农历润12月在本工具支持的200年区间内仅1574年出现\n    if (month === 12 && day === 29 && monthDays(year, month) === 29) {\n        lunarFestivalDate = '12-30';\n    }\n    return {\n        date: solarDate,\n        lunarDate,\n        festival: festival[festivalDate] ? festival[festivalDate].title : null,\n        lunarFestival: lFestival[lunarFestivalDate]\n            ? lFestival[lunarFestivalDate].title\n            : null,\n        lYear: year,\n        lMonth: month,\n        lDay: day,\n        Animal: getAnimal(year),\n        IMonthCn: (isLeap ? '\\u95F0' : '') + toChinaMonth(month),\n        IDayCn: toChinaDay(day),\n        cYear: y,\n        cMonth: m,\n        cDay: d,\n        gzYear: gzY,\n        gzMonth: gzM,\n        gzDay: gzD,\n        isToday,\n        isLeap,\n        nWeek,\n        ncWeek: `\\u661F\\u671F${cWeek}`,\n        isTerm,\n        Term,\n        astro,\n    };\n};\n/**\n * 传入农历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON\n * !important! 参数区间1900.1.31~2100.12.1\n * @param y  lunar year\n * @param m  lunar month\n * @param d  lunar day\n * @param isLeapMonth  lunar month is leap or not.[如果是农历闰月第四个参数赋值true即可]\n * @return JSON object\n * @eg:uni.__f__('log','at uni_modules/tuniaoui-vue3/components/calendar/libs/lunar-calendar/index.ts:1057',calendar.lunar2solar(1987,9,10));\n */\nexport const lunar2solar = (y, m, d, isLeapMonth) => {\n    if (typeof y === 'string')\n        y = Number.parseInt(y);\n    if (typeof m === 'string')\n        m = Number.parseInt(m);\n    if (typeof d === 'string')\n        d = Number.parseInt(d);\n    isLeapMonth = !!isLeapMonth;\n    // const leapOffset = 0\n    const leapMonthValue = leapMonth(y);\n    // const leapDay = leapDays(y)\n    if (isLeapMonth && leapMonthValue !== m) {\n        return -1;\n    } //传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同\n    if ((y === 2100 && m === 12 && d > 1) || (y === 1900 && m === 1 && d < 31)) {\n        return -1;\n    } //超出了最大极限值\n    const day = monthDays(y, m);\n    let _day = day;\n    //bugFix 2016-9-25\n    //if month is leap, _day use leapDays method\n    if (isLeapMonth) {\n        _day = leapDays(y);\n    }\n    if (y < 1900 || y > 2100 || d > _day) {\n        return -1;\n    } //参数合法性效验\n    //计算农历的时间差\n    let offset = 0;\n    let i;\n    for (i = 1900; i < y; i++) {\n        offset += lYearDays(i);\n    }\n    let leap = 0, isAdd = false;\n    for (i = 1; i < m; i++) {\n        leap = leapMonth(y);\n        if (!isAdd) {\n            //处理闰月\n            if (leap <= i && leap > 0) {\n                offset += leapDays(y);\n                isAdd = true;\n            }\n        }\n        offset += monthDays(y, i);\n    }\n    //转换闰月农历 需补充该年闰月的前一个月的时差\n    if (isLeapMonth) {\n        offset += day;\n    }\n    //1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)\n    const strap = Date.UTC(1900, 1, 30, 0, 0, 0);\n    const calObj = new Date((offset + d - 31) * 86400000 + strap);\n    const cY = calObj.getUTCFullYear();\n    const cM = calObj.getUTCMonth() + 1;\n    const cD = calObj.getUTCDate();\n    return solar2lunar(cY, cM, cD);\n};\n//# sourceMappingURL=D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/calendar/libs/lunar-calendar/index.js.map","references":[],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\"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IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IAChC,gCAAgC;IACh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\"}"}
