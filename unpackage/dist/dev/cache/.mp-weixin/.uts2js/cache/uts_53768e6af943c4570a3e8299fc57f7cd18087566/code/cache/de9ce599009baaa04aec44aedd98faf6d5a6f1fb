{"code":"export function newMessages() {\n    return {\n        default: 'Validation error on field %s',\n        required: '%s is required',\n        enum: '%s must be one of %s',\n        whitespace: '%s cannot be empty',\n        date: {\n            format: '%s date %s is invalid for format %s',\n            parse: '%s date could not be parsed, %s is invalid ',\n            invalid: '%s date %s is invalid',\n        },\n        types: {\n            string: '%s is not a %s',\n            method: '%s is not a %s (function)',\n            array: '%s is not an %s',\n            object: '%s is not an %s',\n            number: '%s is not a %s',\n            date: '%s is not a %s',\n            boolean: '%s is not a %s',\n            integer: '%s is not an %s',\n            float: '%s is not a %s',\n            regexp: '%s is not a valid %s',\n            email: '%s is not a valid %s',\n            url: '%s is not a valid %s',\n            hex: '%s is not a valid %s',\n        },\n        string: {\n            len: '%s must be exactly %s characters',\n            min: '%s must be at least %s characters',\n            max: '%s cannot be longer than %s characters',\n            range: '%s must be between %s and %s characters',\n        },\n        number: {\n            len: '%s must equal %s',\n            min: '%s cannot be less than %s',\n            max: '%s cannot be greater than %s',\n            range: '%s must be between %s and %s',\n        },\n        array: {\n            len: '%s must be exactly %s in length',\n            min: '%s cannot be less than %s in length',\n            max: '%s cannot be greater than %s in length',\n            range: '%s must be between %s and %s in length',\n        },\n        pattern: {\n            mismatch: '%s value %s does not match pattern %s',\n        },\n        clone() {\n            const cloned = JSON.parse(JSON.stringify(this));\n            cloned.clone = this.clone;\n            return cloned;\n        },\n    };\n}\nexport const messages = newMessages();\n//# sourceMappingURL=D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/libs/async-validator/messages.js.map","references":["D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/libs/async-validator/interface.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"messages.js\",\"sourceRoot\":\"\",\"sources\":[\"messages.ts\"],\"names\":[],\"mappings\":\"AAEA,MAAM,UAAU,WAAW;IACzB,OAAO;QACL,OAAO,EAAE,8BAA8B;QACvC,QAAQ,EAAE,gBAAgB;QAC1B,IAAI,EAAE,sBAAsB;QAC5B,UAAU,EAAE,oBAAoB;QAChC,IAAI,EAAE;YACJ,MAAM,EAAE,qCAAqC;YAC7C,KAAK,EAAE,6CAA6C;YACpD,OAAO,EAAE,uBAAuB;SACjC;QACD,KAAK,EAAE;YACL,MAAM,EAAE,gBAAgB;YACxB,MAAM,EAAE,2BAA2B;YACnC,KAAK,EAAE,iBAAiB;YACxB,MAAM,EAAE,iBAAiB;YACzB,MAAM,EAAE,gBAAgB;YACxB,IAAI,EAAE,gBAAgB;YACtB,OAAO,EAAE,gBAAgB;YACzB,OAAO,EAAE,iBAAiB;YAC1B,KAAK,EAAE,gBAAgB;YACvB,MAAM,EAAE,sBAAsB;YAC9B,KAAK,EAAE,sBAAsB;YAC7B,GAAG,EAAE,sBAAsB;YAC3B,GAAG,EAAE,sBAAsB;SAC5B;QACD,MAAM,EAAE;YACN,GAAG,EAAE,kCAAkC;YACvC,GAAG,EAAE,mCAAmC;YACxC,GAAG,EAAE,wCAAwC;YAC7C,KAAK,EAAE,yCAAyC;SACjD;QACD,MAAM,EAAE;YACN,GAAG,EAAE,kBAAkB;YACvB,GAAG,EAAE,2BAA2B;YAChC,GAAG,EAAE,8BAA8B;YACnC,KAAK,EAAE,8BAA8B;SACtC;QACD,KAAK,EAAE;YACL,GAAG,EAAE,iCAAiC;YACtC,GAAG,EAAE,qCAAqC;YAC1C,GAAG,EAAE,wCAAwC;YAC7C,KAAK,EAAE,wCAAwC;SAChD;QACD,OAAO,EAAE;YACP,QAAQ,EAAE,uCAAuC;SAClD;QACD,KAAK;YACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAChD,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,MAAM,CAAC;QAChB,CAAC;KACF,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC\"}"}
