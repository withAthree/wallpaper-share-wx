{"version":3,"file":"index.js","sources":["uni_modules/tuniaoui-vue3/hooks/use-z-index/index.ts"],"sourcesContent":["import { computed, inject, ref, unref } from 'vue'\nimport { isNumber } from '../../utils'\n\nimport type { InjectionKey, Ref } from 'vue'\n\nconst zIndex = ref(0)\nconst defaultInitialZIndex = 2000\n\nexport const zIndexContextKey: InjectionKey<Ref<number | undefined>> =\n  Symbol('zIndexContextKey')\n\nexport const useZIndex = () => {\n  const zIndexInjection = inject(zIndexContextKey, undefined)\n  const initialZIndex = computed(() => {\n    const zIndexFromInjection = unref(zIndexInjection)\n    return isNumber(zIndexFromInjection)\n      ? zIndexFromInjection\n      : defaultInitialZIndex\n  })\n\n  const currentZIndex = computed(() => initialZIndex.value + zIndex.value)\n\n  const nextZIndex = () => {\n    zIndex.value++\n    return currentZIndex.value\n  }\n\n  const prevZIndex = () => {\n    zIndex.value--\n    return currentZIndex.value\n  }\n\n  return {\n    initialZIndex,\n    currentZIndex,\n    nextZIndex,\n    prevZIndex,\n  }\n}\n"],"names":["ref"],"mappings":";;;AAKeA,cAAAA,IAAI,CAAC;"}