{"code":"import { getCurrentInstance, nextTick, ref, watch } from 'vue';\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../../constants';\nimport { cloneDeep, isArray, isEmptyVariableInDefault, isObject, throwError, } from '../../../../utils';\nexport const usePicker = (props) => {\n    const emit = getCurrentInstance().emit;\n    // 显示popup弹框\n    const openPopup = ref(false);\n    const showPicker = ref(true);\n    watch(() => { return props.open; }, (value) => {\n        openPopup.value = value;\n    });\n    const _closePopup = () => {\n        emit('update:open', false);\n    };\n    // 关闭popup弹框\n    const closePopupEvent = () => {\n        _closePopup();\n        _generatePickerViewData(props.modelValue);\n        emit('close');\n    };\n    // picker选择器类型\n    let pickerMode = 'signle';\n    // 生成指定格式的数据\n    const _generateData = (data) => {\n        if (isObject(data)) {\n            const originalData = cloneDeep(data);\n            if (Object.prototype.hasOwnProperty.call(originalData, props.childrenKey)) {\n                delete originalData[props.childrenKey];\n            }\n            return {\n                label: data[props.labelKey],\n                value: data[props.valueKey],\n                originalData,\n            };\n        }\n        else {\n            return {\n                label: data,\n                value: data,\n                originalData: data,\n            };\n        }\n    };\n    // 更新/生成级联选择器的数据\n    const _generateOrUpdateCascadeData = (data, generateIndex = 1, defaultValue = []) => {\n        // 判断生成的的级联数据是否已经有数据，如果有数据则更新，否则生成\n        if (pickerData.value.length < generateIndex) {\n            pickerData.value.push(...Array.from({ length: generateIndex - pickerData.value.length }, () => { return []; }));\n        }\n        pickerData.value[generateIndex - 1] = [\n            ...data.map((item) => { return _generateData(item); }),\n        ];\n        // 判断从第几个子级开始生成级联数据\n        let childrenIndex = 0;\n        if (defaultValue.length) {\n            childrenIndex = pickerData.value[generateIndex - 1].findIndex((item) => { return item.value === defaultValue[generateIndex - 1]; });\n            childrenIndex = ~childrenIndex ? childrenIndex : 0;\n        }\n        if (data[childrenIndex] &&\n            Object.prototype.hasOwnProperty.call(data[childrenIndex], props.childrenKey)) {\n            _generateOrUpdateCascadeData(data[childrenIndex][props.childrenKey], generateIndex + 1, defaultValue);\n        }\n    };\n    // picker选择器的数据\n    const pickerData = ref([]);\n    // 当前选中picker-view的索引\n    const currentPickerIndex = ref([]);\n    // 初始化选中的默认Index\n    const initDefaultPickerIndex = () => {\n        let indexValue = [];\n        // 如果没有设置默认值，则默认选中第一项\n        if (props.modelValue === undefined ||\n            (!props.modelValue && ['multiple', 'cascade'].includes(pickerMode)) ||\n            (isArray(props.modelValue) && !props.modelValue.length)) {\n            indexValue = Array.from({ length: pickerData.value.length }, () => { return 0; });\n        }\n        else {\n            if (isArray(props.modelValue)) {\n                indexValue = pickerData.value.map((item, index) => {\n                    let pickerIndex = 0;\n                    if (!props.modelValue[index])\n                        pickerIndex = 0;\n                    else {\n                        pickerIndex = item.findIndex((childItem) => {\n                            return (childItem.value ===\n                                props.modelValue[index]);\n                        });\n                    }\n                    return ~pickerIndex ? pickerIndex : 0;\n                });\n            }\n            else {\n                indexValue = pickerData.value.map((_, k) => {\n                    const index = pickerData.value[k].findIndex((item) => { return item.value === props.modelValue; });\n                    return index === -1 ? 0 : index;\n                });\n            }\n        }\n        currentPickerIndex.value = indexValue;\n    };\n    // 处理用户传递的数据\n    const splitUserPickerData = () => {\n        const data = props.data;\n        if (!data)\n            return;\n        // 判断用户是否有传递数据，并且数据格式是否正确\n        if (!isArray(data)) {\n            throwError('TnPicker', 'picker选择器数据不正确，请传递数组格式的数据');\n        }\n        if (data.length === 0)\n            return;\n        // 根据用户传递的数据来判断是什么类型的选择器\n        if (isArray(data[0])) {\n            // 多选选择器\n            pickerMode = 'multiple';\n            pickerData.value = data.reduce((prev, cur) => {\n                prev.push(cur.map((item) => { return _generateData(item); }));\n                return prev;\n            }, []);\n        }\n        else if (!isArray(data[0]) &&\n            isObject(data[0]) &&\n            Object.prototype.hasOwnProperty.call(data[0], props.childrenKey)) {\n            // 级联选择器\n            pickerMode = 'cascade';\n            _generateOrUpdateCascadeData(data, 1, props.modelValue);\n        }\n        else {\n            // 单列选择器\n            pickerMode = 'signle';\n            pickerData.value = [data.map((item) => { return _generateData(item); })];\n        }\n        // uni.__f__('log','at uni_modules/tuniaoui-vue3/components/picker/src/composables/use-picker.ts:212',JSON.stringify(pickerData.value))\n        nextTick(() => {\n            initDefaultPickerIndex();\n        });\n    };\n    watch(() => { return props.data; }, () => {\n        splitUserPickerData();\n    }, {\n        immediate: true,\n    });\n    // 获取当前选中的值\n    const _getCurrentPickerValue = () => {\n        if (pickerMode === 'signle' && !isArray(props.data[0])) {\n            return pickerData.value[0][currentPickerIndex.value[0]].value;\n        }\n        else {\n            // currentPickerIndex.value.splice(pickerData.value.length)\n            const pickerIndex = cloneDeep(currentPickerIndex.value);\n            pickerIndex.splice(pickerData.value.length);\n            return pickerIndex.map((item, index) => { var _a; return isEmptyVariableInDefault((_a = pickerData.value[index][item]) === null || _a === void 0 ? void 0 : _a.value, 0); });\n        }\n    };\n    // 根据用户选中的索引获取当前用户传入的数据\n    const _getCurrentPickerOriginData = () => {\n        if (pickerMode === 'signle' && !isArray(props.data[0])) {\n            return pickerData.value[0][currentPickerIndex.value[0]].originalData;\n        }\n        else {\n            // currentPickerIndex.value.splice(pickerData.value.length)\n            const pickerIndex = cloneDeep(currentPickerIndex.value);\n            pickerIndex.splice(pickerData.value.length);\n            return pickerIndex.map((item, index) => {\n                var _a;\n                return isEmptyVariableInDefault((_a = pickerData.value[index][item]) === null || _a === void 0 ? void 0 : _a.originalData, undefined);\n            });\n        }\n    };\n    // 生成picker-view的数据\n    const _generatePickerViewData = (val) => {\n        // 如果是级联选择器，对应的级联数据也要更新\n        if (pickerMode === 'cascade') {\n            _generateOrUpdateCascadeData(props.data, 1, val);\n        }\n        nextTick(() => {\n            initDefaultPickerIndex();\n        });\n    };\n    // 标记是否内部更新\n    let isInnerUpdate = false;\n    watch(() => { return props.modelValue; }, (val) => {\n        if (isInnerUpdate) {\n            isInnerUpdate = false;\n            return;\n        }\n        _generatePickerViewData(val);\n    }, {\n        deep: true,\n    });\n    // picker-view选择发生改变事件\n    let changeTimer = null;\n    let continuousChangeStatus = false;\n    const pickerViewChangeEvent = (e) => {\n        if (continuousChangeStatus) {\n            return;\n        }\n        changeTimer = setTimeout(() => {\n            continuousChangeStatus = false;\n            changeTimer && clearTimeout(changeTimer);\n            changeTimer = null;\n        }, 300);\n        continuousChangeStatus = true;\n        // 比较上一次的值，判断是那一列发生了改变\n        let changePickerColumnIndex = currentPickerIndex.value.findIndex((item, index) => { return item !== e.detail.value[index]; });\n        changePickerColumnIndex = ~changePickerColumnIndex\n            ? changePickerColumnIndex\n            : 0;\n        currentPickerIndex.value = e.detail.value;\n        // 如果是级联选择器，对应的列有children的值，则需要更新后面的数据，并且重置后面选中的索引\n        if (pickerMode === 'cascade') {\n            let data = props.data;\n            for (let i = 0; i < changePickerColumnIndex; i++) {\n                data = data[currentPickerIndex.value[i]][props.childrenKey];\n            }\n            const pickerIndex = currentPickerIndex.value[changePickerColumnIndex];\n            pickerData.value.splice(changePickerColumnIndex + 1);\n            if (data[pickerIndex] &&\n                Object.prototype.hasOwnProperty.call(data[pickerIndex], props.childrenKey)) {\n                _generateOrUpdateCascadeData(data[pickerIndex][props.childrenKey], changePickerColumnIndex + 2);\n                currentPickerIndex.value = pickerData.value.map((item, index) => {\n                    return index <= changePickerColumnIndex\n                        ? currentPickerIndex.value[index]\n                        : 0;\n                });\n            }\n        }\n        isInnerUpdate = true;\n        const value = _getCurrentPickerValue();\n        const originData = _getCurrentPickerOriginData();\n        emit(CHANGE_EVENT, value, changePickerColumnIndex, originData);\n        // emit(UPDATE_MODEL_EVENT, value)\n    };\n    // 重置指定位置的数据\n    const resetPickerIndexWithPosition = (start, end) => {\n        currentPickerIndex.value = currentPickerIndex.value.map((item, index) => {\n            return index >= start && (!end || index <= end) ? 0 : item;\n        });\n    };\n    // 点击确认按钮\n    const confirmEvent = () => {\n        const value = _getCurrentPickerValue();\n        const originData = _getCurrentPickerOriginData();\n        isInnerUpdate = true;\n        emit(UPDATE_MODEL_EVENT, value);\n        nextTick(() => {\n            emit('confirm', value, originData);\n        });\n        _closePopup();\n    };\n    // 点击取消按钮\n    const cancelEvent = () => {\n        _generatePickerViewData(props.modelValue);\n        emit('cancel');\n        _closePopup();\n    };\n    return {\n        openPopup,\n        showPicker,\n        pickerData,\n        currentPickerIndex,\n        closePopupEvent,\n        pickerViewChangeEvent,\n        confirmEvent,\n        cancelEvent,\n        initDefaultPickerIndex,\n        resetPickerIndexWithPosition,\n    };\n};\n//# sourceMappingURL=D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/picker/src/composables/use-picker.js.map","references":["D:/DEV/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/constants/index.ts","D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/utils/index.ts","D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/picker/src/picker.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"use-picker.js\",\"sourceRoot\":\"\",\"sources\":[\"use-picker.ts\"],\"names\":[],\"mappings\":\"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\"}"}
