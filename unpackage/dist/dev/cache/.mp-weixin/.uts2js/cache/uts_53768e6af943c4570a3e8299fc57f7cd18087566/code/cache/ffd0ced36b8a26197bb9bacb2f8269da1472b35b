{"code":"import { computed, ref } from 'vue';\nimport dayjs from '../../../../libs/dayjs';\nimport { innerDefaultDateTimeFormat } from '../types';\n// 验证和格式化日期时间\n// const _verifyFormatDateTimeStr = (dateTime: string): string => {\n//   const datePattern = /\\d{4}[-/]\\d{2}[-/]\\d{2}/\n//   const timePattern = /\\d{2}:\\d{2}:\\d{2}/\n//   const hasDate = datePattern.test(dateTime)\n//   const hasTime = timePattern.test(dateTime)\n//   // 如果只传递了时间没有传递日期，则默认使用当天的日期\n//   if (!hasDate) {\n//     dateTime = `${dayjs(new Date()).format('YYYY-MM-DD')} ${dateTime}`\n//   }\n//   // 如果只传递了日期没有传递时间，则默认使用00:00:00\n//   if (!hasTime) {\n//     dateTime = `${dateTime} 00:00:00`\n//   }\n//   return dateTime\n// }\n// 当前时间\nconst nowDayjs = dayjs();\n// 生成指定范围内的数据并放入数组中\nconst generateRangeData = (start, end) => {\n    end = end < start ? start : end;\n    return Array.from({ length: end - start + 1 }).map((_, index) => {\n        return start + index;\n    });\n};\nexport const useDateTimeData = (props) => {\n    // 年列数据\n    const yearColumnData = ref([]);\n    // 月列数据\n    const monthColumnData = ref([]);\n    // 日列数据\n    const dayColumnData = ref([]);\n    // 时列数据\n    const hourColumnData = ref([]);\n    // 分列数据\n    const minuteColumnData = ref([]);\n    // 秒列数据\n    const secondColumnData = ref([]);\n    // 填充日期时间\n    const fillDateTime = (value, format) => {\n        if (!format)\n            format = innerDefaultDateTimeFormat;\n        let dateTime = '';\n        if (props.mode === 'time' || props.mode === 'timeNoSecond') {\n            const timeReg = /^(\\d{1,2})(?::(\\d{1,2}))?(?::(\\d{1,2}))?$/;\n            dateTime = value.replace(timeReg, (_, hour, minute, second) => {\n                return `1970/01/01 ${hour}:${minute || '00'}:${second || '00'}`;\n            });\n        }\n        else {\n            value = dayjs(value, format).format(innerDefaultDateTimeFormat);\n            const dateTimeReg = /^(\\d{4})(?:[-/](\\d{1,2}))?(?:[-/](\\d{1,2}))?(?:\\s?(\\d{1,2}))?(?::(\\d{1,2}))?(?::(\\d{1,2}))?$/;\n            dateTime = value.replace(dateTimeReg, (_, year, month, day, hour, minute, second) => {\n                return `${year}/${month || '01'}/${day || '01'} ${hour || '00'}:${minute || '00'}:${second || '00'}`;\n            });\n        }\n        return dayjs(dateTime, format);\n    };\n    const minTimeDayjs = computed(() => {\n        let time = `${nowDayjs.year() - 10}/01/01 00:00:00`;\n        if (props.minTime)\n            time = props.minTime;\n        return fillDateTime(time);\n    });\n    const maxTimeDayjs = computed(() => {\n        let time = `${nowDayjs.year() + 10}/12/31 23:59:59`;\n        if (props.maxTime)\n            time = props.maxTime;\n        return fillDateTime(time);\n    });\n    // 获取日期时间的最大/小值\n    const getTimeMaxMinValue = (currentValue, maxMinValue, defaultValue) => {\n        var _a, _b;\n        const result = Object.assign({}, defaultValue);\n        let currentYear = 0;\n        let currentMonth = 0;\n        let currentDate = 0;\n        let currentHour = 0;\n        let currentMinute = 0;\n        let maxMinYear = 0;\n        let maxMinMonth = 0;\n        let maxMinDate = 0;\n        let maxMinHour = 0;\n        let maxMinMinute = 0;\n        let maxMinSecond = 0;\n        if (currentValue.toString() === '[object Object]') {\n            ;\n            (_a = currentValue, currentYear = _a.year, currentMonth = _a.month, currentDate = _a.date, currentHour = _a.hour, currentMinute = _a.minute, _a);\n        }\n        else {\n            currentYear = currentValue.year();\n            currentMonth = currentValue.month();\n            currentDate = currentValue.date();\n            currentHour = currentValue.hour();\n            currentMinute = currentValue.minute();\n        }\n        if (maxMinValue.toString() === '[object Object]') {\n            ;\n            (_b = maxMinValue, maxMinYear = _b.year, maxMinMonth = _b.month, maxMinDate = _b.date, maxMinHour = _b.hour, maxMinMinute = _b.minute, maxMinSecond = _b.second, _b);\n        }\n        else {\n            maxMinYear = maxMinValue.year();\n            maxMinMonth = maxMinValue.month();\n            maxMinDate = maxMinValue.date();\n            maxMinHour = maxMinValue.hour();\n            maxMinMinute = maxMinValue.minute();\n            maxMinSecond = maxMinValue.second();\n        }\n        if (currentYear === maxMinYear) {\n            result.month = maxMinMonth;\n            if (currentMonth === maxMinMonth) {\n                result.date = maxMinDate;\n                if (currentDate === maxMinDate) {\n                    result.hour = maxMinHour;\n                    if (currentHour === maxMinHour) {\n                        result.minute = maxMinMinute;\n                        if (currentMinute === maxMinMinute) {\n                            result.second = maxMinSecond;\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    // 生成/更新picker数据\n    const generatePickerData = (value) => {\n        const sameMinYear = value.year() === minTimeDayjs.value.year();\n        const sameMaxYear = value.year() === maxTimeDayjs.value.year();\n        const sameMinMonth = value.month() === minTimeDayjs.value.month();\n        const sameMaxMonth = value.month() === maxTimeDayjs.value.month();\n        const sameMinDate = value.date() === minTimeDayjs.value.date();\n        const sameMaxDate = value.date() === maxTimeDayjs.value.date();\n        const sameMinHour = value.hour() === minTimeDayjs.value.hour();\n        const sameMaxHour = value.hour() === maxTimeDayjs.value.hour();\n        const sameMinMinute = value.minute() === minTimeDayjs.value.minute();\n        const sameMaxMinute = value.minute() === maxTimeDayjs.value.minute();\n        // 判断是否有设置开始、结束年份，如果没有则使用前后10年\n        const minYear = minTimeDayjs.value.year();\n        const maxYear = maxTimeDayjs.value.year();\n        const minMonth = sameMinYear ? minTimeDayjs.value.month() + 1 : 1;\n        const maxMonth = sameMaxYear ? maxTimeDayjs.value.month() + 1 : 12;\n        const minDay = sameMinYear && sameMinMonth ? minTimeDayjs.value.date() : 1;\n        const maxDay = sameMaxYear && sameMaxMonth\n            ? maxTimeDayjs.value.date()\n            : value.daysInMonth();\n        // 判断是否有设置开始、结束时间，如果没有则使用00:00:00和23:59:59\n        const minHour = (sameMinYear && sameMinMonth && sameMinDate) ||\n            props.mode === 'time' ||\n            props.mode === 'timeNoSecond'\n            ? minTimeDayjs.value.hour()\n            : 0;\n        const maxHour = (sameMaxYear && sameMaxMonth && sameMaxDate) ||\n            props.mode === 'time' ||\n            props.mode === 'timeNoSecond'\n            ? maxTimeDayjs.value.hour()\n            : 23;\n        const minMinute = ((sameMinYear && sameMinMonth && sameMinDate) ||\n            props.mode === 'time' ||\n            props.mode === 'timeNoSecond') &&\n            sameMinHour\n            ? minTimeDayjs.value.minute()\n            : 0;\n        const maxMinute = ((sameMaxYear && sameMaxMonth && sameMaxDate) ||\n            props.mode === 'time' ||\n            props.mode === 'timeNoSecond') &&\n            sameMaxHour\n            ? maxTimeDayjs.value.minute()\n            : 59;\n        const minSecond = ((sameMinYear && sameMinMonth && sameMinDate) || props.mode === 'time') &&\n            sameMinHour &&\n            sameMinMinute\n            ? minTimeDayjs.value.second()\n            : 0;\n        const maxSecond = ((sameMaxYear && sameMaxMonth && sameMaxDate) || props.mode === 'time') &&\n            sameMaxHour &&\n            sameMaxMinute\n            ? maxTimeDayjs.value.second()\n            : 59;\n        // if (props.mode === 'time') {\n        //   if (props.minTime) {\n        //     const minTimeValue = getTimeMaxMinValue(value, minTimeDayjs.value, {\n        //       hour: minHour,\n        //       minute: minMinute,\n        //       second: minSecond,\n        //     })\n        //     minHour = minTimeValue.hour\n        //     minMinute = minTimeValue.minute\n        //     minSecond = minTimeValue.second\n        //   }\n        //   if (props.maxTime) {\n        //     const maxTimeValue = getTimeMaxMinValue(value, maxTimeDayjs.value, {\n        //       hour: maxHour,\n        //       minute: maxMinute,\n        //       second: maxSecond,\n        //     })\n        //     maxHour = maxTimeValue.hour\n        //     maxMinute = maxTimeValue.minute\n        //     maxSecond = maxTimeValue.second\n        //   }\n        // }\n        // 生成对应的年、月、日、时、分、秒数据\n        yearColumnData.value = generateRangeData(minYear, maxYear).map((year) => {\n            return {\n                label: `${year}年`,\n                value: year,\n            };\n        });\n        monthColumnData.value = generateRangeData(minMonth, maxMonth).map((month) => {\n            return {\n                label: `${String(month).padStart(2, '0')}月`,\n                value: month,\n            };\n        });\n        dayColumnData.value = generateRangeData(minDay, maxDay).map((day) => {\n            return {\n                label: `${String(day).padStart(2, '0')}日`,\n                value: day,\n            };\n        });\n        hourColumnData.value = generateRangeData(minHour, maxHour).map((hour) => {\n            return {\n                label: String(hour).padStart(2, '0'),\n                value: hour,\n            };\n        });\n        minuteColumnData.value = generateRangeData(minMinute, maxMinute).map((minute) => {\n            return {\n                label: String(minute).padStart(2, '0'),\n                value: minute,\n            };\n        });\n        secondColumnData.value = generateRangeData(minSecond, maxSecond).map((second) => {\n            return {\n                label: String(second).padStart(2, '0'),\n                value: second,\n            };\n        });\n    };\n    // picker数据\n    const pickerData = computed(() => {\n        const result = [];\n        if (props.mode === 'year')\n            result.push(yearColumnData.value);\n        if (props.mode === 'yearmonth')\n            result.push(yearColumnData.value, monthColumnData.value);\n        if (props.mode === 'date')\n            result.push(yearColumnData.value, monthColumnData.value, dayColumnData.value);\n        if (props.mode === 'time')\n            result.push(hourColumnData.value, minuteColumnData.value, secondColumnData.value);\n        if (props.mode === 'datetime')\n            result.push(yearColumnData.value, monthColumnData.value, dayColumnData.value, hourColumnData.value, minuteColumnData.value, secondColumnData.value);\n        if (props.mode === 'datetimeNoSecond')\n            result.push(yearColumnData.value, monthColumnData.value, dayColumnData.value, hourColumnData.value, minuteColumnData.value);\n        if (props.mode === 'timeNoSecond')\n            result.push(hourColumnData.value, minuteColumnData.value);\n        return result;\n    });\n    return {\n        pickerData,\n        minTimeDayjs,\n        maxTimeDayjs,\n        generatePickerData,\n        fillDateTime,\n        getTimeMaxMinValue,\n    };\n};\n//# sourceMappingURL=D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/date-time-picker/src/composables/use-date-time-data.js.map","references":["D:/DEV/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/libs/dayjs/index.d.ts","D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/date-time-picker/src/types.ts","D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/libs/dayjs/index.d.ts","D:/DEV/Project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/date-time-picker/src/date-time-picker.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"use-date-time-data.js\",\"sourceRoot\":\"\",\"sources\":[\"use-date-time-data.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,KAAK,CAAA;AACnC,OAAO,KAAK,MAAM,wBAAwB,CAAA;AAC1C,OAAO,EAAE,0BAA0B,EAAE,MAAM,UAAU,CAAA;AAiBrD,aAAa;AACb,mEAAmE;AACnE,kDAAkD;AAClD,4CAA4C;AAE5C,+CAA+C;AAC/C,+CAA+C;AAE/C,iCAAiC;AACjC,oBAAoB;AACpB,yEAAyE;AACzE,MAAM;AACN,oCAAoC;AACpC,oBAAoB;AACpB,wCAAwC;AACxC,MAAM;AACN,oBAAoB;AACpB,IAAI;AAEJ,OAAO;AACP,MAAM,QAAQ,GAAG,KAAK,EAAE,CAAA;AAExB,mBAAmB;AACnB,MAAM,iBAAiB,GAAG,CAAC,KAAa,EAAE,GAAW;IACnD,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAA;IAC/B,OAAO,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK;QAC1D,OAAO,KAAK,GAAG,KAAK,CAAA;IACtB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,KAA0B;IACxD,OAAO;IACP,MAAM,cAAc,GAAG,GAAG,CAAsB,EAAE,CAAC,CAAA;IACnD,OAAO;IACP,MAAM,eAAe,GAAG,GAAG,CAAsB,EAAE,CAAC,CAAA;IACpD,OAAO;IACP,MAAM,aAAa,GAAG,GAAG,CAAsB,EAAE,CAAC,CAAA;IAClD,OAAO;IACP,MAAM,cAAc,GAAG,GAAG,CAAsB,EAAE,CAAC,CAAA;IACnD,OAAO;IACP,MAAM,gBAAgB,GAAG,GAAG,CAAsB,EAAE,CAAC,CAAA;IACrD,OAAO;IACP,MAAM,gBAAgB,GAAG,GAAG,CAAsB,EAAE,CAAC,CAAA;IAErD,SAAS;IACT,MAAM,YAAY,GAAG,CAAC,KAAa,EAAE,MAAe;QAClD,IAAI,CAAC,MAAM;YAAE,MAAM,GAAG,0BAA0B,CAAA;QAChD,IAAI,QAAQ,GAAG,EAAE,CAAA;QACjB,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,cAAc,EAAE;YAC1D,MAAM,OAAO,GAAG,2CAA2C,CAAA;YAC3D,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM;gBACxD,OAAO,cAAc,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,EAAE,CAAA;YACjE,CAAC,CAAC,CAAA;SACH;aAAM;YACL,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAA;YAC/D,MAAM,WAAW,GACf,8FAA8F,CAAA;YAChG,QAAQ,GAAG,KAAK,CAAC,OAAO,CACtB,WAAW,EACX,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM;gBACxC,OAAO,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAC5D,MAAM,IAAI,IACZ,IAAI,MAAM,IAAI,IAAI,EAAE,CAAA;YACtB,CAAC,CACF,CAAA;SACF;QAED,OAAO,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;IAChC,CAAC,CAAA;IAED,MAAM,YAAY,GAAG,QAAQ,CAAQ;QACnC,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,iBAAiB,CAAA;QACnD,IAAI,KAAK,CAAC,OAAO;YAAE,IAAI,GAAG,KAAK,CAAC,OAAO,CAAA;QACvC,OAAO,YAAY,CAAC,IAAI,CAAC,CAAA;IAC3B,CAAC,CAAC,CAAA;IACF,MAAM,YAAY,GAAG,QAAQ,CAAQ;QACnC,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,iBAAiB,CAAA;QACnD,IAAI,KAAK,CAAC,OAAO;YAAE,IAAI,GAAG,KAAK,CAAC,OAAO,CAAA;QACvC,OAAO,YAAY,CAAC,IAAI,CAAC,CAAA;IAC3B,CAAC,CAAC,CAAA;IAEF,eAAe;IACf,MAAM,kBAAkB,GAAG,CACzB,YAAiC,EACjC,WAAgC,EAChC,YAAyB;;QAEzB,MAAM,MAAM,qBAAqB,YAAY,CAAE,CAAA;QAC/C,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,IAAI,YAAY,GAAG,CAAC,CAAA;QACpB,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,IAAI,aAAa,GAAG,CAAC,CAAA;QACrB,IAAI,UAAU,GAAG,CAAC,CAAA;QAClB,IAAI,WAAW,GAAG,CAAC,CAAA;QACnB,IAAI,UAAU,GAAG,CAAC,CAAA;QAClB,IAAI,UAAU,GAAG,CAAC,CAAA;QAClB,IAAI,YAAY,GAAG,CAAC,CAAA;QACpB,IAAI,YAAY,GAAG,CAAC,CAAA;QAEpB,IAAI,YAAY,CAAC,QAAQ,EAAE,KAAK,iBAAiB,EAAE;YACjD,CAAC;YAAA,CAAC,KAME,YAA2B,EALvB,WAAW,UAAA,EACV,YAAY,WAAA,EACb,WAAW,UAAA,EACX,WAAW,UAAA,EACT,aAAa,YAAA,KACS,CAAA;SACjC;aAAM;YACL,WAAW,GAAI,YAAsB,CAAC,IAAI,EAAE,CAAA;YAC5C,YAAY,GAAI,YAAsB,CAAC,KAAK,EAAE,CAAA;YAC9C,WAAW,GAAI,YAAsB,CAAC,IAAI,EAAE,CAAA;YAC5C,WAAW,GAAI,YAAsB,CAAC,IAAI,EAAE,CAAA;YAC5C,aAAa,GAAI,YAAsB,CAAC,MAAM,EAAE,CAAA;SACjD;QAED,IAAI,WAAW,CAAC,QAAQ,EAAE,KAAK,iBAAiB,EAAE;YAChD,CAAC;YAAA,CAAC,KAOE,WAA0B,EANtB,UAAU,UAAA,EACT,WAAW,WAAA,EACZ,UAAU,UAAA,EACV,UAAU,UAAA,EACR,YAAY,YAAA,EACZ,YAAY,YAAA,KACS,CAAA;SAChC;aAAM;YACL,UAAU,GAAI,WAAqB,CAAC,IAAI,EAAE,CAAA;YAC1C,WAAW,GAAI,WAAqB,CAAC,KAAK,EAAE,CAAA;YAC5C,UAAU,GAAI,WAAqB,CAAC,IAAI,EAAE,CAAA;YAC1C,UAAU,GAAI,WAAqB,CAAC,IAAI,EAAE,CAAA;YAC1C,YAAY,GAAI,WAAqB,CAAC,MAAM,EAAE,CAAA;YAC9C,YAAY,GAAI,WAAqB,CAAC,MAAM,EAAE,CAAA;SAC/C;QAED,IAAI,WAAW,KAAK,UAAU,EAAE;YAC9B,MAAM,CAAC,KAAK,GAAG,WAAW,CAAA;YAC1B,IAAI,YAAY,KAAK,WAAW,EAAE;gBAChC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAA;gBACxB,IAAI,WAAW,KAAK,UAAU,EAAE;oBAC9B,MAAM,CAAC,IAAI,GAAG,UAAU,CAAA;oBACxB,IAAI,WAAW,KAAK,UAAU,EAAE;wBAC9B,MAAM,CAAC,MAAM,GAAG,YAAY,CAAA;wBAC5B,IAAI,aAAa,KAAK,YAAY,EAAE;4BAClC,MAAM,CAAC,MAAM,GAAG,YAAY,CAAA;yBAC7B;qBACF;iBACF;aACF;SACF;QAED,OAAO,MAAM,CAAA;IACf,CAAC,CAAA;IAED,gBAAgB;IAChB,MAAM,kBAAkB,GAAG,CAAC,KAAY;QACtC,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QAC9D,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QAC9D,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QACjE,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QACjE,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QAC9D,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QAC9D,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QAC9D,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QAC9D,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAA;QACpE,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,EAAE,KAAK,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAA;QAEpE,8BAA8B;QAC9B,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QACzC,MAAM,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;QACzC,MAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACjE,MAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;QAClE,MAAM,MAAM,GAAG,WAAW,IAAI,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1E,MAAM,MAAM,GACV,WAAW,IAAI,YAAY;YACzB,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE;YAC3B,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAA;QACzB,0CAA0C;QAC1C,MAAM,OAAO,GACX,CAAC,WAAW,IAAI,YAAY,IAAI,WAAW,CAAC;YAC5C,KAAK,CAAC,IAAI,KAAK,MAAM;YACrB,KAAK,CAAC,IAAI,KAAK,cAAc;YAC3B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE;YAC3B,CAAC,CAAC,CAAC,CAAA;QACP,MAAM,OAAO,GACX,CAAC,WAAW,IAAI,YAAY,IAAI,WAAW,CAAC;YAC5C,KAAK,CAAC,IAAI,KAAK,MAAM;YACrB,KAAK,CAAC,IAAI,KAAK,cAAc;YAC3B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE;YAC3B,CAAC,CAAC,EAAE,CAAA;QACR,MAAM,SAAS,GACb,CAAC,CAAC,WAAW,IAAI,YAAY,IAAI,WAAW,CAAC;YAC3C,KAAK,CAAC,IAAI,KAAK,MAAM;YACrB,KAAK,CAAC,IAAI,KAAK,cAAc,CAAC;YAChC,WAAW;YACT,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7B,CAAC,CAAC,CAAC,CAAA;QACP,MAAM,SAAS,GACb,CAAC,CAAC,WAAW,IAAI,YAAY,IAAI,WAAW,CAAC;YAC3C,KAAK,CAAC,IAAI,KAAK,MAAM;YACrB,KAAK,CAAC,IAAI,KAAK,cAAc,CAAC;YAChC,WAAW;YACT,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7B,CAAC,CAAC,EAAE,CAAA;QACR,MAAM,SAAS,GACb,CAAC,CAAC,WAAW,IAAI,YAAY,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC;YACvE,WAAW;YACX,aAAa;YACX,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7B,CAAC,CAAC,CAAC,CAAA;QACP,MAAM,SAAS,GACb,CAAC,CAAC,WAAW,IAAI,YAAY,IAAI,WAAW,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC;YACvE,WAAW;YACX,aAAa;YACX,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE;YAC7B,CAAC,CAAC,EAAE,CAAA;QACR,+BAA+B;QAC/B,yBAAyB;QACzB,2EAA2E;QAC3E,uBAAuB;QACvB,2BAA2B;QAC3B,2BAA2B;QAC3B,SAAS;QACT,kCAAkC;QAClC,sCAAsC;QACtC,sCAAsC;QACtC,MAAM;QACN,yBAAyB;QACzB,2EAA2E;QAC3E,uBAAuB;QACvB,2BAA2B;QAC3B,2BAA2B;QAC3B,SAAS;QACT,kCAAkC;QAClC,sCAAsC;QACtC,sCAAsC;QACtC,MAAM;QACN,IAAI;QAEJ,qBAAqB;QACrB,cAAc,CAAC,KAAK,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI;YAClE,OAAO;gBACL,KAAK,EAAE,GAAG,IAAI,GAAG;gBACjB,KAAK,EAAE,IAAI;aACZ,CAAA;QACH,CAAC,CAAC,CAAA;QACF,eAAe,CAAC,KAAK,GAAG,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,GAAG,CAC/D,CAAC,KAAK;YACJ,OAAO;gBACL,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG;gBAC3C,KAAK,EAAE,KAAK;aACb,CAAA;QACH,CAAC,CACF,CAAA;QACD,aAAa,CAAC,KAAK,GAAG,iBAAiB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG;YAC9D,OAAO;gBACL,KAAK,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG;gBACzC,KAAK,EAAE,GAAG;aACX,CAAA;QACH,CAAC,CAAC,CAAA;QACF,cAAc,CAAC,KAAK,GAAG,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI;YAClE,OAAO;gBACL,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;gBACpC,KAAK,EAAE,IAAI;aACZ,CAAA;QACH,CAAC,CAAC,CAAA;QACF,gBAAgB,CAAC,KAAK,GAAG,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,GAAG,CAClE,CAAC,MAAM;YACL,OAAO;gBACL,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;gBACtC,KAAK,EAAE,MAAM;aACd,CAAA;QACH,CAAC,CACF,CAAA;QACD,gBAAgB,CAAC,KAAK,GAAG,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,GAAG,CAClE,CAAC,MAAM;YACL,OAAO;gBACL,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;gBACtC,KAAK,EAAE,MAAM;aACd,CAAA;QACH,CAAC,CACF,CAAA;IACH,CAAC,CAAA;IAED,WAAW;IACX,MAAM,UAAU,GAAG,QAAQ,CAAa;QACtC,MAAM,MAAM,GAAe,EAAE,CAAA;QAC7B,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM;YAAE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA;QAC5D,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW;YAC5B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,eAAe,CAAC,KAAK,CAAC,CAAA;QAC1D,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM;YACvB,MAAM,CAAC,IAAI,CACT,cAAc,CAAC,KAAK,EACpB,eAAe,CAAC,KAAK,EACrB,aAAa,CAAC,KAAK,CACpB,CAAA;QACH,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM;YACvB,MAAM,CAAC,IAAI,CACT,cAAc,CAAC,KAAK,EACpB,gBAAgB,CAAC,KAAK,EACtB,gBAAgB,CAAC,KAAK,CACvB,CAAA;QACH,IAAI,KAAK,CAAC,IAAI,KAAK,UAAU;YAC3B,MAAM,CAAC,IAAI,CACT,cAAc,CAAC,KAAK,EACpB,eAAe,CAAC,KAAK,EACrB,aAAa,CAAC,KAAK,EACnB,cAAc,CAAC,KAAK,EACpB,gBAAgB,CAAC,KAAK,EACtB,gBAAgB,CAAC,KAAK,CACvB,CAAA;QACH,IAAI,KAAK,CAAC,IAAI,KAAK,kBAAkB;YACnC,MAAM,CAAC,IAAI,CACT,cAAc,CAAC,KAAK,EACpB,eAAe,CAAC,KAAK,EACrB,aAAa,CAAC,KAAK,EACnB,cAAc,CAAC,KAAK,EACpB,gBAAgB,CAAC,KAAK,CACvB,CAAA;QACH,IAAI,KAAK,CAAC,IAAI,KAAK,cAAc;YAC/B,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAA;QAE3D,OAAO,MAAM,CAAA;IACf,CAAC,CAAC,CAAA;IAEF,OAAO;QACL,UAAU;QACV,YAAY;QACZ,YAAY;QACZ,kBAAkB;QAClB,YAAY;QACZ,kBAAkB;KACnB,CAAA;AACH,CAAC,CAAA\"}"}
