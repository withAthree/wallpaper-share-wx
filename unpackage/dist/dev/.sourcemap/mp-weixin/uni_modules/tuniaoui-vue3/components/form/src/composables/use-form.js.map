{"version":3,"file":"use-form.js","sources":["uni_modules/tuniaoui-vue3/components/form/src/composables/use-form.ts"],"sourcesContent":["import { computed } from 'vue'\r\nimport { filterFields } from '../utils'\r\nimport { isFunction } from '../../../../utils'\r\n\r\nimport type { ValidateFieldsError } from '../../../../libs/async-validator'\r\nimport type { FormItemProp } from '../form-item'\r\nimport type { FormProps } from '../form'\r\nimport type {\r\n  FormContext,\r\n  FormItemContext,\r\n  FormValidationCallback,\r\n  FormValidationResult,\r\n} from '../types'\r\nimport type { Arrayable } from '../../../../utils'\r\n\r\nexport const useForm = (props: FormProps) => {\r\n  // formItem信息\r\n  const fields: FormItemContext[] = []\r\n\r\n  // 添加formItem信息\r\n  const addField: FormContext['addField'] = (field) => {\r\n    fields.push(field)\r\n  }\r\n\r\n  // 移除formItem信息\r\n  const removeField: FormContext['removeField'] = (field) => {\r\n    if (field.prop) {\r\n      fields.splice(fields.indexOf(field), 1)\r\n    }\r\n  }\r\n\r\n  // 重置formItem\r\n  const resetFields: FormContext['resetFields'] = (properties = []) => {\r\n    if (!props.model) {\r\n      // eslint-disable-next-line no-console\r\n      return console.warn('[TnForm] model参数未定义')\r\n    }\r\n    filterFields(fields, properties).forEach((field) => field.resetField())\r\n  }\r\n\r\n  // 清除formItem验证\r\n  const clearValidate: FormContext['clearValidate'] = (props = []) => {\r\n    filterFields(fields, props).forEach((field) => field.clearValidate())\r\n  }\r\n\r\n  // 是否可以进行校验\r\n  const isValidatable = computed(() => {\r\n    const hasModel = !!props.model\r\n    if (!hasModel) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn('[TnForm] model参数未定义')\r\n    }\r\n    return hasModel\r\n  })\r\n\r\n  // 获取需要校验的字段\r\n  const obtainValidateFields = (props: Arrayable<FormItemProp>) => {\r\n    if (fields.length === 0) return []\r\n\r\n    const filteredFields = filterFields(fields, props)\r\n    if (!filteredFields.length) {\r\n      // eslint-disable-next-line no-console\r\n      console.warn('[TnForm] 未找到需要校验的字段')\r\n      return []\r\n    }\r\n    return filteredFields\r\n  }\r\n\r\n  // 校验\r\n  const validate = async (\r\n    callback?: FormValidationCallback\r\n  ): FormValidationResult => validateField(undefined, callback)\r\n\r\n  // 开始校验字段\r\n  const doValidateField = async (\r\n    props: Arrayable<FormItemProp>\r\n  ): Promise<boolean> => {\r\n    if (!isValidatable.value) return false\r\n\r\n    const fields = obtainValidateFields(props)\r\n    if (fields.length === 0) return false\r\n\r\n    let validationErrors: ValidateFieldsError = {}\r\n    for (const field of fields) {\r\n      try {\r\n        await field.validate('')\r\n      } catch (fields) {\r\n        validationErrors = {\r\n          ...validationErrors,\r\n          ...(fields as ValidateFieldsError),\r\n        }\r\n      }\r\n    }\r\n\r\n    if (Object.keys(validationErrors).length === 0) return true\r\n    return Promise.reject(validationErrors)\r\n  }\r\n\r\n  // 校验字段\r\n  const validateField: FormContext['validateField'] = async (\r\n    modelProps = [],\r\n    callback\r\n  ) => {\r\n    const shouldThrow = !isFunction(callback)\r\n    try {\r\n      const result = await doValidateField(modelProps)\r\n      // 如果结果为false则说明当前校验不通过\r\n      if (result === true) {\r\n        callback?.(true)\r\n      }\r\n      return result\r\n    } catch (e) {\r\n      if (e instanceof Error) throw e\r\n\r\n      const invalidFields = e as ValidateFieldsError\r\n\r\n      callback?.(false, invalidFields)\r\n      return shouldThrow && Promise.reject(invalidFields)\r\n    }\r\n  }\r\n\r\n  return {\r\n    addField,\r\n    removeField,\r\n    resetFields,\r\n    clearValidate,\r\n    validate,\r\n    validateField,\r\n  }\r\n}\r\n"],"names":["uni","filterFields","props","computed","__awaiter","fields","__values","isFunction"],"mappings":"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"}