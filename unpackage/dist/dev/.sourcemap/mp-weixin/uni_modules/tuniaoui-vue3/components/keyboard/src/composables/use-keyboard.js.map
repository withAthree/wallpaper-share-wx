{"version":3,"file":"use-keyboard.js","sources":["uni_modules/tuniaoui-vue3/components/keyboard/src/composables/use-keyboard.ts"],"sourcesContent":["import { nextTick, ref, toRef, watch } from 'vue'\nimport { useLongPress } from '../../../../hooks'\nimport { isEmptyVariableInDefault } from '../../../../utils'\n\nimport type { SetupContext } from 'vue'\nimport type { CarKeyboardLang, KeyboardEmits, KeyboardProps } from '../keyboard'\n\nexport const useKeyboard = (\n  props: KeyboardProps,\n  emits: SetupContext<KeyboardEmits>['emit']\n) => {\n  // 弹出隐藏键盘\n  const showKeyboard = ref<boolean>(false)\n  watch(\n    () => props.show,\n    (val) => {\n      showKeyboard.value = val\n    }\n  )\n\n  // popup弹框关闭事件\n  const popupCloseEvent = () => {\n    emits('close')\n    emits('update:show', false)\n  }\n\n  // 用户输入的值\n  const inputValue = ref<string>(props.modelValue || '')\n  watch(\n    () => props.modelValue,\n    (val) => (inputValue.value = val)\n  )\n\n  // 键盘点击事件\n  const keyboardClickEvent = (value: string, disabled: boolean) => {\n    if (disabled) return\n    if (props.vibrate) {\n      uni.vibrateShort()\n    }\n    let concatValue = true\n    if (value === 'confirm') {\n      popupCloseEvent()\n      emits('confirm')\n      return\n    } else if (value === 'cancel') {\n      popupCloseEvent()\n      return\n    } else {\n      // 处理小数的0位和小数点位置\n      if (props.mode === 'digit') {\n        // 判断当前点击的value是是否位.\n        if (value === '.') {\n          // 判断modelValue中是否已经存在.，如果存在，则直接return\n          if (inputValue.value.includes('.')) {\n            return\n          }\n          // 当小数点在第一位时，前面自动补0\n          if (inputValue.value === '') {\n            inputValue.value = '0.'\n            concatValue = false\n          }\n        }\n        // 判断当前点击的value是否为0\n        if (value === '0') {\n          // 判断第一位是否为0，如果是，直接return\n          if (inputValue.value === '0') {\n            return\n          }\n        }\n        // 如果第一位为0，第二位不为.，则将第一位替换为当前点击的value\n        if (inputValue.value === '0' && value !== '.') {\n          inputValue.value = value\n          concatValue = false\n        }\n      }\n      if (\n        props.mode === 'idcard' &&\n        value === 'X' &&\n        inputValue.value.includes('X')\n      ) {\n        return\n      }\n      if (concatValue) {\n        inputValue.value += value\n      }\n    }\n\n    emits('update:modelValue', inputValue.value)\n    nextTick(() => {\n      emits('change', inputValue.value)\n    })\n  }\n\n  // 单独处理删除事件\n  const backspaceEvent = () => {\n    if (inputValue.value === '') {\n      clearBackspaceLongPressEvent()\n      return\n    }\n    if (props.vibrate) {\n      uni.vibrateShort()\n    }\n    inputValue.value = inputValue.value.slice(0, -1)\n\n    emits('backspace')\n    emits('update:modelValue', inputValue.value)\n    nextTick(() => {\n      emits('change', inputValue.value)\n    })\n  }\n\n  const {\n    handleLongPressEvent: handleBackspaceEvent,\n    clearLongPressTimer: clearBackspaceLongPressEvent,\n  } = useLongPress(backspaceEvent, toRef(props, 'longPressDelete'))\n\n  // 车牌键盘中英文切换\n  const carKeyboardLang = ref<CarKeyboardLang>(\n    isEmptyVariableInDefault(props.carLang, 'cn')\n  )\n  let updateCarLangInner = false\n  watch(\n    () => props.carLang,\n    (val) => {\n      if (updateCarLangInner) {\n        updateCarLangInner = false\n        return\n      }\n      carKeyboardLang.value = val\n    }\n  )\n\n  const carKeyboardSwitchLang = () => {\n    if (carKeyboardLang.value === 'cn') {\n      carKeyboardLang.value = 'en'\n    } else {\n      carKeyboardLang.value = 'cn'\n    }\n\n    updateCarLangInner = true\n    emits('update:carLangMode', carKeyboardLang.value)\n  }\n\n  return {\n    showKeyboard,\n    carKeyboardLang,\n    popupCloseEvent,\n    keyboardClickEvent,\n    handleBackspaceEvent,\n    clearBackspaceLongPressEvent,\n    carKeyboardSwitchLang,\n  }\n}\n"],"names":["ref","watch","uni","nextTick","useLongPress","toRef","isEmptyVariableInDefault"],"mappings":";;;;;;AAOa,MAAA,cAAc,CACzB,OACA,UAA0C;AAG1C,QAAM,eAAeA,kBAAa,KAAK;AACvCC,gBAAK,MACH,MAAM;AAAA,WAAA,MAAM;AAAA,EAAN,GACN,CAAC,QAAG;AACF,iBAAa,QAAQ;AAAA,EACvB,CAAC;AAIH,QAAM,kBAAkB,MAAA;AACtB,UAAM,OAAO;AACb,UAAM,eAAe,KAAK;AAAA,EAC5B;AAGA,QAAM,aAAaD,cAAG,IAAS,MAAM,cAAc,EAAE;AACrDC,gBAAAA,MACE;AAAM,WAAA,MAAM;AAAA,EAAU,GACtB,CAAC;AAAQ,WAAC,WAAW,QAAQ;AAAA,EAAI,CAAA;AAInC,QAAM,qBAAqB,CAAC,OAAe,aAAiB;AAC1D,QAAI;AAAU;AACd,QAAI,MAAM,SAAS;AACjBC,oBAAG,MAAC,aAAY;AAAA,IACjB;AACD,QAAI,cAAc;AAClB,QAAI,UAAU,WAAW;AACvB;AACA,YAAM,SAAS;AACf;AAAA,IACD,WAAU,UAAU,UAAU;AAC7B;AACA;AAAA,IACD,OAAM;AAEL,UAAI,MAAM,SAAS,SAAS;AAE1B,YAAI,UAAU,KAAK;AAEjB,cAAI,WAAW,MAAM,SAAS,GAAG,GAAG;AAClC;AAAA,UACD;AAED,cAAI,WAAW,UAAU,IAAI;AAC3B,uBAAW,QAAQ;AACnB,0BAAc;AAAA,UACf;AAAA,QACF;AAED,YAAI,UAAU,KAAK;AAEjB,cAAI,WAAW,UAAU,KAAK;AAC5B;AAAA,UACD;AAAA,QACF;AAED,YAAI,WAAW,UAAU,OAAO,UAAU,KAAK;AAC7C,qBAAW,QAAQ;AACnB,wBAAc;AAAA,QACf;AAAA,MACF;AACD,UACE,MAAM,SAAS,YACf,UAAU,OACV,WAAW,MAAM,SAAS,GAAG,GAC7B;AACA;AAAA,MACD;AACD,UAAI,aAAa;AACf,mBAAW,SAAS;AAAA,MACrB;AAAA,IACF;AAED,UAAM,qBAAqB,WAAW,KAAK;AAC3CC,kBAAAA,WAAS,MAAA;AACP,YAAM,UAAU,WAAW,KAAK;AAAA,IAClC,CAAC;AAAA,EACH;AAGA,QAAM,iBAAiB,MAAA;AACrB,QAAI,WAAW,UAAU,IAAI;AAC3B;AACA;AAAA,IACD;AACD,QAAI,MAAM,SAAS;AACjBD,oBAAG,MAAC,aAAY;AAAA,IACjB;AACD,eAAW,QAAQ,WAAW,MAAM,MAAM,GAAG,EAAE;AAE/C,UAAM,WAAW;AACjB,UAAM,qBAAqB,WAAW,KAAK;AAC3CC,kBAAAA,WAAS,MAAA;AACP,YAAM,UAAU,WAAW,KAAK;AAAA,IAClC,CAAC;AAAA,EACH;AAEM,QAAA,KAGFC,kDAAY,aAAC,gBAAgBC,cAAK,MAAC,OAAO,iBAAiB,CAAC,GAFxC,gDACD;AAIvB,QAAM,kBAAkBL,cAAAA,IACtBM,uCAAwB,yBAAC,MAAM,SAAS,IAAI,CAAC;AAE/C,MAAI,qBAAqB;AACzBL,gBAAK,MACH,MAAM;AAAA,WAAA,MAAM;AAAA,EAAN,GACN,CAAC,QAAG;AACF,QAAI,oBAAoB;AACtB,2BAAqB;AACrB;AAAA,IACD;AACD,oBAAgB,QAAQ;AAAA,EAC1B,CAAC;AAGH,QAAM,wBAAwB,MAAA;AAC5B,QAAI,gBAAgB,UAAU,MAAM;AAClC,sBAAgB,QAAQ;AAAA,IACzB,OAAM;AACL,sBAAgB,QAAQ;AAAA,IACzB;AAED,yBAAqB;AACrB,UAAM,sBAAsB,gBAAgB,KAAK;AAAA,EACnD;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAEJ;;"}