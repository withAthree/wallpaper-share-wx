{"code":"/**\n * 验证电子邮箱格式\n */\nexport const isEmail = (value) => {\n    return /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/.test(value);\n};\n/**\n * 验证手机格式\n */\nexport const isMobile = (value) => {\n    return /^1[3-9]\\d{9}$/.test(value);\n};\n/**\n * 验证URL格式\n */\nexport const isUrl = (value) => {\n    return /http(s)?:\\/\\/([\\w-]+\\.)+[\\w-]+(\\/[\\w-./?%&=]*)?/.test(value);\n};\n/**\n * 验证日期格式\n */\nexport const isDate = (value) => {\n    return !/Invalid|NaN/.test(new Date(value).toString());\n};\n/**\n * 验证ISO类型的日期格式\n */\nexport const isDateISO = (value) => {\n    return /^\\d{4}[/-](0?[1-9]|1[012])[/-](0?[1-9]|[12][0-9]|3[01])$/.test(value);\n};\n/**\n * 验证十进制数字\n */\nexport const isNumber = (value) => {\n    // eslint-disable-next-line no-useless-escape\n    return /^[\\+-]?(\\d+\\.?\\d*|\\.\\d+|\\d\\.\\d+e\\+\\d+)$/.test(value);\n};\n/**\n * 验证整数\n */\nexport const isDigits = (value) => {\n    return /^\\d+$/.test(value);\n};\n/**\n * 验证身份证号码\n */\nexport const isIdCard = (value) => {\n    return /^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$/.test(value);\n};\n/**\n * 是否车牌号\n */\nexport const isCarNo = (value) => {\n    // 新能源车牌\n    const xreg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}(([0-9]{5}[DF]$)|([DF][A-HJ-NP-Z0-9][0-9]{4}$))/;\n    // 旧车牌\n    const creg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-HJ-NP-Z0-9]{4}[A-HJ-NP-Z0-9挂学警港澳]{1}$/;\n    if (value.length === 7) {\n        return creg.test(value);\n    }\n    else if (value.length === 8) {\n        return xreg.test(value);\n    }\n    else {\n        return false;\n    }\n};\n/**\n * 金额,只允许2位小数\n */\nexport const isAmount = (value) => {\n    //金额，只允许保留两位小数\n    return /^[1-9]\\d*(,\\d{3})*(\\.\\d{1,2})?$|^0\\.\\d{1,2}$/.test(value);\n};\n/**\n * 中文\n */\nexport const isChinese = (value) => {\n    // eslint-disable-next-line unicorn/escape-case\n    const reg = /^[\\u4e00-\\u9fa5]+$/gi;\n    return reg.test(value);\n};\n/**\n * 只能输入字母\n */\nexport const isLetter = (value) => {\n    return /^[a-zA-Z]*$/.test(value);\n};\n/**\n * 只能是字母或者数字\n */\nexport const isEnOrNum = (value) => {\n    //英文或者数字\n    const reg = /^[0-9a-zA-Z]*$/g;\n    return reg.test(value);\n};\n/**\n * 验证是否包含某个值\n */\nexport const isContains = (value, param) => {\n    return value.includes(param);\n};\n/**\n * 验证一个值范围[min, max]\n */\nexport const isRange = (value, param) => {\n    return value >= param[0] && value <= param[1];\n};\n/**\n * 验证一个长度范围[min, max]\n */\nexport const isRangeLength = (value, param) => {\n    return value.length >= Number(param[0]) && value.length <= Number(param[1]);\n};\n/**\n * 是否固定电话\n */\nexport const isLandline = (value) => {\n    const reg = /^\\d{3,4}-\\d{7,8}(-\\d{3,4})?$/;\n    return reg.test(value);\n};\n/**\n * 判断是否为空\n */\nexport const isEmpty = (value) => {\n    switch (typeof value) {\n        case 'undefined':\n            return true;\n        case 'string':\n            if (value.replace(/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g, '').length == 0)\n                return true;\n            break;\n        case 'boolean':\n            if (!value)\n                return true;\n            break;\n        case 'number':\n            if (0 === value || Number.isNaN(value))\n                return true;\n            break;\n        case 'object':\n            if (null === value)\n                return true;\n            if (Object.keys(value).length === 0)\n                return true;\n            return false;\n    }\n    return false;\n};\n/**\n * 是否json字符串\n */\nexport const isJsonString = (value) => {\n    if (typeof value == 'string') {\n        try {\n            const obj = JSON.parse(value);\n            if (typeof obj == 'object' && obj) {\n                return true;\n            }\n            else {\n                return false;\n            }\n            // eslint-disable-next-line unicorn/prefer-optional-catch-binding\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    return false;\n};\n/**\n * 是否短信验证码\n */\nexport const isMessageCode = (value, len = 6) => {\n    return new RegExp(`^\\\\d{${len}}$`).test(value);\n};\n//# sourceMappingURL=D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/utils/validator/index.js.map","references":[],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"index.ts\"],\"names\":[],\"mappings\":\"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\"}"}
