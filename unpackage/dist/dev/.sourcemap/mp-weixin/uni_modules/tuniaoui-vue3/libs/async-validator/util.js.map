{"version":3,"file":"util.js","sources":["uni_modules/tuniaoui-vue3/libs/async-validator/util.ts"],"sourcesContent":["/* eslint no-console:0 */\r\n\r\nimport type {\r\n  ValidateError,\r\n  ValidateOption,\r\n  RuleValuePackage,\r\n  InternalRuleItem,\r\n  SyncErrorType,\r\n  RuleType,\r\n  Value,\r\n  Values,\r\n} from './interface';\r\n\r\nconst formatRegExp = /%[sdj%]/g;\r\n\r\ndeclare var ASYNC_VALIDATOR_NO_WARNING;\r\n\r\nexport let warning: (type: string, errors: SyncErrorType[]) => void = () => {};\r\n\r\n// don't print warning message when in production env or node runtime\r\nif (\r\n  typeof process !== 'undefined' &&\r\n  process.env &&\r\n  process.env.NODE_ENV !== 'production' &&\r\n  typeof window !== 'undefined' &&\r\n  typeof document !== 'undefined'\r\n) {\r\n  warning = (type, errors) => {\r\n    if (\r\n      typeof console !== 'undefined' &&\r\n      console.warn &&\r\n      typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined'\r\n    ) {\r\n      if (errors.every(e => typeof e === 'string')) {\r\n        console.warn(type, errors);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function convertFieldsError(\r\n  errors: ValidateError[],\r\n): Record<string, ValidateError[]> {\r\n  if (!errors || !errors.length) return null;\r\n  const fields = {};\r\n  errors.forEach(error => {\r\n    const field = error.field;\r\n    fields[field] = fields[field] || [];\r\n    fields[field].push(error);\r\n  });\r\n  return fields;\r\n}\r\n\r\nexport function format(\r\n  template: ((...args: any[]) => string) | string,\r\n  ...args: any[]\r\n): string {\r\n  let i = 0;\r\n  const len = args.length;\r\n  if (typeof template === 'function') {\r\n    return template.apply(null, args);\r\n  }\r\n  if (typeof template === 'string') {\r\n    let str = template.replace(formatRegExp, x => {\r\n      if (x === '%%') {\r\n        return '%';\r\n      }\r\n      if (i >= len) {\r\n        return x;\r\n      }\r\n      switch (x) {\r\n        case '%s':\r\n          return String(args[i++]);\r\n        case '%d':\r\n          return (Number(args[i++]) as unknown) as string;\r\n        case '%j':\r\n          try {\r\n            return JSON.stringify(args[i++]);\r\n          } catch (_) {\r\n            return '[Circular]';\r\n          }\r\n          break;\r\n        default:\r\n          return x;\r\n      }\r\n    });\r\n    return str;\r\n  }\r\n  return template;\r\n}\r\n\r\nfunction isNativeStringType(type: string) {\r\n  return (\r\n    type === 'string' ||\r\n    type === 'url' ||\r\n    type === 'hex' ||\r\n    type === 'email' ||\r\n    type === 'date' ||\r\n    type === 'pattern'\r\n  );\r\n}\r\n\r\nexport function isEmptyValue(value: Value, type?: string) {\r\n  if (value === undefined || value === null) {\r\n    return true;\r\n  }\r\n  if (type === 'array' && Array.isArray(value) && !value.length) {\r\n    return true;\r\n  }\r\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isEmptyObject(obj: object) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nfunction asyncParallelArray(\r\n  arr: RuleValuePackage[],\r\n  func: ValidateFunc,\r\n  callback: (errors: ValidateError[]) => void,\r\n) {\r\n  const results: ValidateError[] = [];\r\n  let total = 0;\r\n  const arrLength = arr.length;\r\n\r\n  function count(errors: ValidateError[]) {\r\n    results.push(...(errors || []));\r\n    total++;\r\n    if (total === arrLength) {\r\n      callback(results);\r\n    }\r\n  }\r\n\r\n  arr.forEach(a => {\r\n    func(a, count);\r\n  });\r\n}\r\n\r\nfunction asyncSerialArray(\r\n  arr: RuleValuePackage[],\r\n  func: ValidateFunc,\r\n  callback: (errors: ValidateError[]) => void,\r\n) {\r\n  let index = 0;\r\n  const arrLength = arr.length;\r\n\r\n  function next(errors: ValidateError[]) {\r\n    if (errors && errors.length) {\r\n      callback(errors);\r\n      return;\r\n    }\r\n    const original = index;\r\n    index = index + 1;\r\n    if (original < arrLength) {\r\n      func(arr[original], next);\r\n    } else {\r\n      callback([]);\r\n    }\r\n  }\r\n\r\n  next([]);\r\n}\r\n\r\nfunction flattenObjArr(objArr: Record<string, RuleValuePackage[]>) {\r\n  const ret: RuleValuePackage[] = [];\r\n  Object.keys(objArr).forEach(k => {\r\n    ret.push(...(objArr[k] || []));\r\n  });\r\n  return ret;\r\n}\r\n\r\nexport class AsyncValidationError extends Error {\r\n  errors: ValidateError[];\r\n  fields: Record<string, ValidateError[]>;\r\n\r\n  constructor(\r\n    errors: ValidateError[],\r\n    fields: Record<string, ValidateError[]>,\r\n  ) {\r\n    super('Async Validation Error');\r\n    this.errors = errors;\r\n    this.fields = fields;\r\n  }\r\n}\r\n\r\ntype ValidateFunc = (\r\n  data: RuleValuePackage,\r\n  doIt: (errors: ValidateError[]) => void,\r\n) => void;\r\n\r\nexport function asyncMap(\r\n  objArr: Record<string, RuleValuePackage[]>,\r\n  option: ValidateOption,\r\n  func: ValidateFunc,\r\n  callback: (errors: ValidateError[]) => void,\r\n  source: Values,\r\n): Promise<Values> {\r\n  if (option.first) {\r\n    const pending = new Promise<Values>((resolve, reject) => {\r\n      const next = (errors: ValidateError[]) => {\r\n        callback(errors);\r\n        return errors.length\r\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\r\n          : resolve(source);\r\n      };\r\n      const flattenArr = flattenObjArr(objArr);\r\n      asyncSerialArray(flattenArr, func, next);\r\n    });\r\n    pending.catch(e => e);\r\n    return pending;\r\n  }\r\n  const firstFields =\r\n    option.firstFields === true\r\n      ? Object.keys(objArr)\r\n      : option.firstFields || [];\r\n\r\n  const objArrKeys = Object.keys(objArr);\r\n  const objArrLength = objArrKeys.length;\r\n  let total = 0;\r\n  const results: ValidateError[] = [];\r\n  const pending = new Promise<Values>((resolve, reject) => {\r\n    const next = (errors: ValidateError[]) => {\r\n      results.push.apply(results, errors);\r\n      total++;\r\n      if (total === objArrLength) {\r\n        callback(results);\r\n        return results.length\r\n          ? reject(\r\n              new AsyncValidationError(results, convertFieldsError(results)),\r\n            )\r\n          : resolve(source);\r\n      }\r\n    };\r\n    if (!objArrKeys.length) {\r\n      callback(results);\r\n      resolve(source);\r\n    }\r\n    objArrKeys.forEach(key => {\r\n      const arr = objArr[key];\r\n      if (firstFields.indexOf(key) !== -1) {\r\n        asyncSerialArray(arr, func, next);\r\n      } else {\r\n        asyncParallelArray(arr, func, next);\r\n      }\r\n    });\r\n  });\r\n  pending.catch(e => e);\r\n  return pending;\r\n}\r\n\r\nfunction isErrorObj(\r\n  obj: ValidateError | string | (() => string),\r\n): obj is ValidateError {\r\n  return !!(obj && (obj as ValidateError).message !== undefined);\r\n}\r\n\r\nfunction getValue(value: Values, path: string[]) {\r\n  let v = value;\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (v == undefined) {\r\n      return v;\r\n    }\r\n    v = v[path[i]];\r\n  }\r\n  return v;\r\n}\r\n\r\nexport function complementError(rule: InternalRuleItem, source: Values) {\r\n  return (oe: ValidateError | (() => string) | string): ValidateError => {\r\n    let fieldValue;\r\n    if (rule.fullFields) {\r\n      fieldValue = getValue(source, rule.fullFields);\r\n    } else {\r\n      fieldValue = source[(oe as any).field || rule.fullField];\r\n    }\r\n    if (isErrorObj(oe)) {\r\n      oe.field = oe.field || rule.fullField;\r\n      oe.fieldValue = fieldValue;\r\n      return oe;\r\n    }\r\n    return {\r\n      message: typeof oe === 'function' ? oe() : oe,\r\n      fieldValue,\r\n      field: ((oe as unknown) as ValidateError).field || rule.fullField,\r\n    };\r\n  };\r\n}\r\n\r\nexport function deepMerge<T extends object>(target: T, source: Partial<T>): T {\r\n  if (source) {\r\n    for (const s in source) {\r\n      if (source.hasOwnProperty(s)) {\r\n        const value = source[s];\r\n        if (typeof value === 'object' && typeof target[s] === 'object') {\r\n          target[s] = {\r\n            ...target[s],\r\n            ...value,\r\n          };\r\n        } else {\r\n          target[s] = value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return target;\r\n}\r\n"],"names":["warning","uni"],"mappings":";;AAaA,MAAM,eAAe;AAIVA,QAAAA,UAA2D,MAAA;AAAO;AAG7E,IACE,OAAO,YAAY,eACnB,QAAQ,OACR,QACA,OAAO,WAAW,eAClB,OAAO,aAAa,aACpB;AACUA,oBAAA,CAAC,MAAM,WAAM;AACrB,QACE,OAAO,YAAY,eACnB,QAAQ,QACR,OAAO,+BAA+B,aACtC;AACI,UAAA,OAAO,MAAM,CAAK,MAAA;AAAA,eAAA,OAAO,MAAM;AAAA,MAAA,CAAQ,GAAG;AAC5CC,sBAAA,MAAa,MAAA,QAAA,gEAAA,MAAM,MAAM;AAAA,MAC1B;AAAA,IACF;AAAA,EAAA;AAEJ;AAEK,SAAU,mBACd,QAAuB;AAEnB,MAAA,CAAC,UAAU,CAAC,OAAO;AAAe,WAAA;AACtC,QAAM,SAAS,CAAA;AACf,SAAO,QAAQ,CAAK,UAAA;AAClB,UAAM,QAAQ,MAAM;AACpB,WAAO,KAAK,IAAI,OAAO,KAAK,KAAK,CAAA;AAC1B,WAAA,KAAK,EAAE,KAAK,KAAK;AAAA,EAAA,CACzB;AACM,SAAA;AACT;AAEgB,SAAA,OACd,aACG,MAAW;AAEd,MAAI,IAAI;AACR,QAAM,MAAM,KAAK;AACb,MAAA,OAAO,aAAa,YAAY;AAC3B,WAAA,SAAS,MAAM,MAAM,IAAI;AAAA,EACjC;AACG,MAAA,OAAO,aAAa,UAAU;AAChC,QAAI,MAAM,SAAS,QAAQ,cAAc,CAAC,MAAA;AACxC,UAAI,MAAM,MAAM;AACP,eAAA;AAAA,MACR;AACD,UAAI,KAAK,KAAK;AACL,eAAA;AAAA,MACR;AACD,cAAQ,GAAG;AAAA,QACT,KAAK;AACI,iBAAA,OAAO,KAAK,GAAG,CAAC;AAAA,QACzB,KAAK;AACK,iBAAA,OAAO,KAAK,GAAG,CAAC;AAAA,QAC1B,KAAK;AACC,cAAA;AACF,mBAAO,KAAK,UAAU,KAAK,GAAG,CAAC;AAAA,mBACxB,GAAG;AACH,mBAAA;AAAA,UACR;AACD;AAAA,QACF;AACS,iBAAA;AAAA,MACV;AAAA,IAAA,CACF;AACM,WAAA;AAAA,EACR;AACM,SAAA;AACT;AAEA,SAAS,mBAAmB,MAAY;AAEpC,SAAA,SAAS,YACT,SAAS,SACT,SAAS,SACT,SAAS,WACT,SAAS,UACT,SAAS;AAEb;AAEgB,SAAA,aAAa,OAAc,MAAa;AAClD,MAAA,UAAU,UAAa,UAAU,MAAM;AAClC,WAAA;AAAA,EACR;AACG,MAAA,SAAS,WAAW,MAAM,QAAQ,KAAK,KAAK,CAAC,MAAM,QAAQ;AACtD,WAAA;AAAA,EACR;AACD,MAAI,mBAAmB,IAAI,KAAK,OAAO,UAAU,YAAY,CAAC,OAAO;AAC5D,WAAA;AAAA,EACR;AACM,SAAA;AACT;AAMA,SAAS,mBACP,KACA,MACA,UAA2C;AAE3C,QAAM,UAA2B,CAAA;AACjC,MAAI,QAAQ;AACZ,QAAM,YAAY,IAAI;AAEtB,WAAS,MAAM,QAAuB;AACpC,YAAQ,KAAK,GAAI,UAAU,CAAG,CAAA;AAC9B;AACA,QAAI,UAAU,WAAW;AACvB,eAAS,OAAO;AAAA,IACjB;AAAA,EACH;AAEA,MAAI,QAAQ,CAAC,MAAA;AACX,SAAK,GAAG,KAAK;AAAA,EAAA,CACd;AACH;AAEA,SAAS,iBACP,KACA,MACA,UAA2C;AAE3C,MAAI,QAAQ;AACZ,QAAM,YAAY,IAAI;AAEtB,WAAS,KAAK,QAAuB;AAC/B,QAAA,UAAU,OAAO,QAAQ;AAC3B,eAAS,MAAM;AACf;AAAA,IACD;AACD,UAAM,WAAW;AACjB,YAAQ,QAAQ;AAChB,QAAI,WAAW,WAAW;AACnB,WAAA,IAAI,QAAQ,GAAG,IAAI;AAAA,IAAA,OACnB;AACL,eAAS,CAAE,CAAA;AAAA,IACZ;AAAA,EACH;AAEA,OAAK,CAAE,CAAA;AACT;AAEA,SAAS,cAAc,QAA0C;AAC/D,QAAM,MAA0B,CAAA;AAChC,SAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,MAAA;AAC3B,QAAI,KAAK,GAAI,OAAO,CAAC,KAAK,CAAG,CAAA;AAAA,EAAA,CAC9B;AACM,SAAA;AACT;AAEM,MAAO,6BAA6B,MAAK;AAAA,EAI7C,YACE,QACA,QAAuC;AAEvC,UAAM,wBAAwB;AAC9B,SAAK,SAAS;AACd,SAAK,SAAS;AAAA,EAChB;AACD;AAOK,SAAU,SACd,QACA,QACA,MACA,UACA,QAAc;AAEd,MAAI,OAAO,OAAO;AAChB,UAAM,YAAU,IAAI,QAAgB,CAAC,SAAS,WAAM;AAC5C,YAAA,OAAO,CAAC,WAAuB;AACnC,iBAAS,MAAM;AACf,eAAO,OAAO,SACV,OAAO,IAAI,qBAAqB,QAAQ,mBAAmB,MAAM,CAAC,CAAC,IACnE,QAAQ,MAAM;AAAA,MAAA;AAEd,YAAA,aAAa,cAAc,MAAM;AACtB,uBAAA,YAAY,MAAM,IAAI;AAAA,IAAA,CACxC;AACD,cAAQ,MAAM,CAAC,MAAA;AAAI,aAAA;AAAA,IAAA,CAAC;AACb,WAAA;AAAA,EACR;AACK,QAAA,cACJ,OAAO,gBAAgB,OACnB,OAAO,KAAK,MAAM,IAClB,OAAO,eAAe,CAAA;AAEtB,QAAA,aAAa,OAAO,KAAK,MAAM;AACrC,QAAM,eAAe,WAAW;AAChC,MAAI,QAAQ;AACZ,QAAM,UAA2B,CAAA;AACjC,QAAM,UAAU,IAAI,QAAgB,CAAC,SAAS,WAAM;AAC5C,UAAA,OAAO,CAAC,WAAuB;AAC3B,cAAA,KAAK,MAAM,SAAS,MAAM;AAClC;AACA,UAAI,UAAU,cAAc;AAC1B,iBAAS,OAAO;AAChB,eAAO,QAAQ,SACX,OACE,IAAI,qBAAqB,SAAS,mBAAmB,OAAO,CAAC,CAAC,IAEhE,QAAQ,MAAM;AAAA,MACnB;AAAA,IAAA;AAEC,QAAA,CAAC,WAAW,QAAQ;AACtB,eAAS,OAAO;AAChB,cAAQ,MAAM;AAAA,IACf;AACD,eAAW,QAAQ,CAAG,QAAA;AACd,YAAA,MAAM,OAAO,GAAG;AACtB,UAAI,YAAY,QAAQ,GAAG,MAAM,IAAI;AAClB,yBAAA,KAAK,MAAM,IAAI;AAAA,MAAA,OAC3B;AACc,2BAAA,KAAK,MAAM,IAAI;AAAA,MACnC;AAAA,IAAA,CACF;AAAA,EAAA,CACF;AACD,UAAQ,MAAM,CAAC,MAAA;AAAI,WAAA;AAAA,EAAA,CAAC;AACb,SAAA;AACT;AAEA,SAAS,WACP,KAA4C;AAE5C,SAAO,CAAC,EAAE,OAAQ,IAAsB,YAAY;AACtD;AAEA,SAAS,SAAS,OAAe,MAAc;AAC7C,MAAI,IAAI;AACR,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,QAAI,KAAK,QAAW;AACX,aAAA;AAAA,IACR;AACG,QAAA,EAAE,KAAK,CAAC,CAAC;AAAA,EACd;AACM,SAAA;AACT;AAEgB,SAAA,gBAAgB,MAAwB,QAAc;AACpE,SAAO,CAAC,OAA2C;AAC7C,QAAA;AACJ,QAAI,KAAK,YAAY;AACN,mBAAA,SAAS,QAAQ,KAAK,UAAU;AAAA,IAAA,OACxC;AACL,mBAAa,OAAQ,GAAW,SAAS,KAAK,SAAS;AAAA,IACxD;AACG,QAAA,WAAW,EAAE,GAAG;AACf,SAAA,QAAQ,GAAG,SAAS,KAAK;AAC5B,SAAG,aAAa;AACT,aAAA;AAAA,IACR;AACM,WAAA;AAAA,MACL,SAAS,OAAO,OAAO,aAAa,GAAO,IAAA;AAAA,MAC3C;AAAA,MACA,OAAS,GAAiC,SAAS,KAAK;AAAA,IAAA;AAAA;AAG9D;AAEgB,SAAA,UAA4B,QAAW,QAAkB;AACvE,MAAI,QAAQ;AACV,eAAW,KAAK,QAAQ;AAClB,UAAA,OAAO,eAAe,CAAC,GAAG;AACtB,cAAA,QAAQ,OAAO,CAAC;AACtB,YAAI,OAAO,UAAU,YAAY,OAAO,OAAO,CAAC,MAAM,UAAU;AAC9D,iBAAO,CAAC,IACH,OAAA,OAAA,OAAA,OAAA,CAAA,GAAA,OAAO,CAAC,CAAC,GACT,KAAK;AAAA,QAAA,OAEL;AACL,iBAAO,CAAC,IAAI;AAAA,QACb;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACM,SAAA;AACT;;;;;;;"}