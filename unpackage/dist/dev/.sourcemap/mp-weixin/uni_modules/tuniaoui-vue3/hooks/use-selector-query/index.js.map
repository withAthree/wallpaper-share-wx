{"version":3,"file":"index.js","sources":["uni_modules/tuniaoui-vue3/hooks/use-selector-query/index.ts"],"sourcesContent":["import { getCurrentInstance } from 'vue'\nimport { debugWarn } from '../../utils'\n\nimport type { ComponentInternalInstance } from 'vue'\n\nexport const useSelectorQuery = (\n  instance?: ComponentInternalInstance | null\n) => {\n  let query: UniApp.SelectorQuery | null = null\n\n  if (!instance) {\n    instance = getCurrentInstance()\n  }\n  if (!instance) {\n    debugWarn('useSelectorQuery', 'useSelectorQuery必须在setup函数中使用')\n  }\n\n  // #ifndef MP-ALIPAY || APP-PLUS\n  query = uni.createSelectorQuery().in(instance)\n  // #endif\n  // #ifdef APP-PLUS\n  query = uni.createSelectorQuery().in((instance as any).ctx.$scope)\n  // #endif\n  // #ifdef MP-ALIPAY\n  query = uni.createSelectorQuery().in(null)\n  // #endif\n\n  const getSelectorNodeInfo = (selector: string): Promise<UniApp.NodeInfo> => {\n    return new Promise((resolve, reject) => {\n      if (query) {\n        query\n          .select(selector)\n          .boundingClientRect((res) => {\n            const selectRes: UniApp.NodeInfo = res as UniApp.NodeInfo\n            if (selectRes) {\n              resolve(selectRes)\n            } else {\n              reject(new Error(`未找到对应节点: ${selector}`))\n            }\n          })\n          .exec()\n      } else {\n        reject(new Error('未找到对应的SelectorQuery实例'))\n      }\n    })\n  }\n\n  const getSelectorNodeInfos = (\n    selector: string\n  ): Promise<UniApp.NodeInfo[]> => {\n    return new Promise((resolve, reject) => {\n      if (query) {\n        query\n          .selectAll(selector)\n          .boundingClientRect((res) => {\n            const selectRes: UniApp.NodeInfo[] = res as UniApp.NodeInfo[]\n            if (selectRes && selectRes.length > 0) {\n              resolve(selectRes)\n            } else {\n              reject(new Error(`未找到对应节点: ${selector}`))\n            }\n          })\n          .exec()\n      } else {\n        reject(new Error('未找到对应的SelectorQuery实例'))\n      }\n    })\n  }\n\n  return {\n    query,\n    getSelectorNodeInfo,\n    getSelectorNodeInfos,\n  }\n}\n"],"names":["getCurrentInstance","debugWarn","uni"],"mappings":";;;;AAKO,MAAM,mBAAmB,CAC9B,aAA2C;AAE3C,MAAI,QAAqC;AAEzC,MAAI,CAAC,UAAU;AACb,eAAWA,cAAkB,mBAAA;AAAA,EAC9B;AACD,MAAI,CAAC,UAAU;AACbC,mDAAU,oBAAoB,+BAA+B;AAAA,EAC9D;AAGD,UAAQC,cAAAA,MAAI,oBAAqB,EAAC,GAAG,QAAQ;AAS7C,QAAM,sBAAsB,CAAC,aAAgB;AAC3C,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAM;AACjC,UAAI,OAAO;AACT,cACG,OAAO,QAAQ,EACf,mBAAmB,CAAC,QAAG;AACtB,gBAAM,YAA6B;AACnC,cAAI,WAAW;AACb,oBAAQ,SAAS;AAAA,UAClB,OAAM;AACL,mBAAO,IAAI,MAAM,YAAY,QAAQ,EAAE,CAAC;AAAA,UACzC;AAAA,QACH,CAAC,EACA;MACJ,OAAM;AACL,eAAO,IAAI,MAAM,uBAAuB,CAAC;AAAA,MAC1C;AAAA,IACH,CAAC;AAAA,EACH;AAEA,QAAM,uBAAuB,CAC3B,aAAgB;AAEhB,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAM;AACjC,UAAI,OAAO;AACT,cACG,UAAU,QAAQ,EAClB,mBAAmB,CAAC,QAAG;AACtB,gBAAM,YAA+B;AACrC,cAAI,aAAa,UAAU,SAAS,GAAG;AACrC,oBAAQ,SAAS;AAAA,UAClB,OAAM;AACL,mBAAO,IAAI,MAAM,YAAY,QAAQ,EAAE,CAAC;AAAA,UACzC;AAAA,QACH,CAAC,EACA;MACJ,OAAM;AACL,eAAO,IAAI,MAAM,uBAAuB,CAAC;AAAA,MAC1C;AAAA,IACH,CAAC;AAAA,EACH;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA;AAEJ;;"}