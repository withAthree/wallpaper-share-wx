{"code":"import { __awaiter } from \"tslib\";\nimport { computed, getCurrentInstance, nextTick, ref, watch } from 'vue';\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '../../../../constants';\nimport { debugWarn, isBoolean, isPromise, throwError } from '../../../../utils';\nimport { useFormItem } from '../../../form';\nimport useUploadHandleFunction from './use-upload-handle-function';\nexport const useImageUpload = (props) => {\n    const emit = getCurrentInstance().emit;\n    const _a = useUploadHandleFunction(props), chooseImage = _a.chooseImage, uploadProcess = _a.uploadProcess, checkFileSizeAndExtension = _a.checkFileSizeAndExtension, showErrorTips = _a.showErrorTips;\n    const formItem = useFormItem().formItem;\n    // 文件列表\n    const fileList = ref([]);\n    // 监听文件列表变化\n    let isInnerUpdate = false;\n    watch(() => { return props.modelValue; }, (val) => {\n        if (isInnerUpdate) {\n            isInnerUpdate = false;\n            return;\n        }\n        fileList.value = val.map((item) => { return ({\n            url: item,\n            status: 'done',\n            progress: 100,\n        }); });\n    }, {\n        immediate: true,\n    });\n    // 判断是否超过最大上传数\n    const isExceedMaxCount = computed(() => { return fileList.value.length >= props.limit; });\n    // 当前剩余可选文件数量\n    const currentRemainFileCount = computed(() => {\n        if (props.multiple) {\n            return props.limit - fileList.value.length;\n        }\n        else {\n            return props.limit - fileList.value.length > 0 ? 1 : 0;\n        }\n    });\n    // 选择文件\n    const chooseFile = () => { return __awaiter(void 0, void 0, void 0, function* () {\n        const disabled = props.disabled, action = props.action, customUploadHandler = props.customUploadHandler;\n        if (disabled)\n            return;\n        // 如果没有设置action或者没有自定义图片上传处理函数，则直接返回\n        if (!action && !customUploadHandler) {\n            showErrorTips('请设置action或者自定义图片上传处理函数');\n            debugWarn('TnImageUpload', '请设置action或者自定义图片上传处理函数');\n            return;\n        }\n        // 选择前已有文件的数量\n        const prevUploadedFileCount = fileList.value.length;\n        chooseImage(currentRemainFileCount.value)\n            .then((res) => {\n            let selectFile = res;\n            // 判断尺寸和格式是否正确\n            const checkFailFiles = checkFileSizeAndExtension(selectFile);\n            if (checkFailFiles.length) {\n                showErrorTips('文件格式或大小不符合要求');\n                emit('oversizeOrNoSupport', checkFailFiles);\n                // 剔除不符合要求的文件\n                selectFile = selectFile.filter((item) => { return !checkFailFiles.includes(item); });\n            }\n            fileList.value.push(...selectFile.map((item) => {\n                const url = item\n                    .path;\n                return {\n                    url,\n                    status: 'ready',\n                    progress: 0,\n                    file: item,\n                };\n            }));\n            if (props.autoUpload && selectFile.length)\n                uploadFile(prevUploadedFileCount);\n        })\n            .catch((err) => {\n            debugWarn('TnImageUpload', `选择图片失败: ${err}`);\n            showErrorTips((err === null || err === void 0 ? void 0 : err.errMsg) || '选择图片失败');\n        });\n    }); };\n    // 处理上传事件\n    const handleUploadEvent = (item, index, uploadSingle = false) => {\n        uploadProcess(item)\n            .then((res) => {\n            if (res) {\n                handleUploadSuccess(item);\n            }\n            else {\n                handleUploadError(item, '上传失败');\n            }\n        })\n            .catch((err) => {\n            handleUploadError(item, err);\n        })\n            .finally(() => {\n            if (!uploadSingle)\n                uploadFile(index + 1);\n        });\n    };\n    // 上传文件\n    const uploadFile = (startIndex, uploadSingle = false) => {\n        const autoUpload = props.autoUpload, beforeUpload = props.beforeUpload;\n        const autoNextUpload = autoUpload && !uploadSingle;\n        // 判断是否全部文件上传完毕\n        if (startIndex >= fileList.value.length) {\n            if (props.autoRemoveFaildFile)\n                handleUploadCompleteFailFile();\n            return;\n        }\n        const fileItem = fileList.value[startIndex];\n        // 如果当前上传完毕自动上传下一张\n        if (fileItem.progress === 100) {\n            fileItem.status = 'done';\n            fileItem.uploadTask = undefined;\n            if (autoNextUpload)\n                uploadFile(startIndex + 1);\n            return;\n        }\n        // 上传前回调\n        if (!beforeUpload) {\n            handleUploadEvent(fileItem, startIndex, uploadSingle);\n            return;\n        }\n        const shouldUpload = beforeUpload(fileItem.file);\n        const isBeforeUploadPromiseOrBoolean = [\n            isPromise(shouldUpload),\n            isBoolean(shouldUpload),\n        ].includes(true);\n        if (!isBeforeUploadPromiseOrBoolean) {\n            throwError('[TnImageUpload]', 'beforeUpload返回值必须是Promise或者Boolean');\n        }\n        if (isPromise(shouldUpload)) {\n            shouldUpload\n                .then((res) => {\n                if (res)\n                    handleUploadEvent(fileItem, startIndex, uploadSingle);\n                else {\n                    removeFile(startIndex);\n                    if (autoNextUpload)\n                        uploadFile(startIndex);\n                }\n            })\n                .catch((err) => {\n                debugWarn('TnImageUpload', `beforeUpload出错: ${err}`);\n                fileItem.status = 'failed';\n            });\n        }\n        else {\n            if (shouldUpload)\n                handleUploadEvent(fileItem, startIndex, uploadSingle);\n            else {\n                removeFile(startIndex);\n                if (autoNextUpload)\n                    uploadFile(startIndex);\n            }\n        }\n    };\n    // 获取上传成功的文件url\n    const getUploadSuceesFileUrlValue = () => {\n        return fileList.value\n            .filter((item) => { return item.status === 'done'; })\n            .map((item) => { return item.url; });\n    };\n    // 已上传文件列表发生改变\n    const uploadSuccessFileListChange = () => {\n        isInnerUpdate = true;\n        const value = getUploadSuceesFileUrlValue();\n        emit(UPDATE_MODEL_EVENT, value);\n        nextTick(() => {\n            var _a;\n            emit(CHANGE_EVENT, value);\n            if (props.validateEvent) {\n                (_a = formItem === null || formItem === void 0 ? void 0 : formItem.validate) === null || _a === void 0 ? void 0 : _a.call(formItem, 'change').catch((err) => {\n                    debugWarn(err);\n                });\n            }\n        });\n    };\n    // 处理文件上传成功\n    const handleUploadSuccess = (item) => {\n        item.status = 'done';\n        item.progress = 100;\n        item.uploadTask = undefined;\n        item.file = undefined;\n        emit('success', item);\n        uploadSuccessFileListChange();\n    };\n    // 处理上传文件发生错误\n    const handleUploadError = (item, errorMsg) => {\n        item.status = 'failed';\n        item.progress = 0;\n        item.uploadTask = undefined;\n        item.file = undefined;\n        showErrorTips(errorMsg);\n        emit('fail', new Error(errorMsg), item);\n    };\n    // 处理上传完成后失败的文件\n    const handleUploadCompleteFailFile = () => {\n        const tempFileList = [...fileList.value];\n        tempFileList.forEach((item, index) => {\n            if (item.status === 'failed') {\n                removeFile(index);\n            }\n        });\n    };\n    // 重新上传文件\n    const retryUploadFile = (index) => {\n        const fileItem = fileList.value[index];\n        fileItem.status = 'ready';\n        fileItem.progress = 0;\n        uploadFile(index, true);\n    };\n    // 重新上传全部文件\n    const retryAllUpload = () => {\n        // 查找出第一张上传失败的图片\n        const firstFailedFileIndex = fileList.value.findIndex((item) => { return item.status === 'failed'; });\n        uploadFile(firstFailedFileIndex);\n    };\n    // 手动上传文件\n    const customUploadHandle = () => {\n        if (!fileList.value.length)\n            return;\n        uploadFile(0);\n    };\n    // 移除文件\n    const removeFile = (index) => {\n        const fileItem = fileList.value[index];\n        // 如果文件正在上传中，取消上传\n        if (fileItem.status === 'uploading' &&\n            fileItem.uploadTask &&\n            fileItem.progress > 0 &&\n            fileItem.progress < 100) {\n            fileItem.uploadTask.abort();\n        }\n        fileList.value.splice(index, 1);\n        // 如果文件是已经完成的，重新计算上传成功的文件url\n        if (fileItem.status === 'done') {\n            emit('remove', fileItem.url);\n            uploadSuccessFileListChange();\n        }\n    };\n    // 删除文件\n    const removeFileEvent = (index) => {\n        const disabled = props.disabled, beforeRemove = props.beforeRemove;\n        if (disabled)\n            return;\n        // 获取待删除的文件\n        const fileItem = fileList.value[index];\n        if (!fileItem)\n            return;\n        uni.showModal({\n            title: '操作提示',\n            content: '确认需要移除该图片吗?',\n            showCancel: true,\n            cancelText: '取 消',\n            confirmText: '确 认',\n            success: (res) => {\n                if (res.confirm) {\n                    // 删除前回调\n                    if (!beforeRemove) {\n                        removeFile(index);\n                        return;\n                    }\n                    const shouldRemove = beforeRemove(fileItem);\n                    const isShouldRemovePromiseOrBoolean = [\n                        isPromise(shouldRemove),\n                        isBoolean(shouldRemove),\n                    ].includes(true);\n                    if (!isShouldRemovePromiseOrBoolean) {\n                        throwError('[TnImageUpload]', 'beforeRemove返回值必须是Promise或者Boolean');\n                    }\n                    if (isPromise(shouldRemove)) {\n                        shouldRemove\n                            .then((res) => {\n                            if (res)\n                                removeFile(index);\n                        })\n                            .catch((err) => {\n                            debugWarn('TnImageUpload', `beforeRemove出错: ${err}`);\n                        });\n                    }\n                    else {\n                        if (shouldRemove)\n                            removeFile(index);\n                    }\n                }\n            },\n        });\n    };\n    // 清空文件列表\n    const clearAllFile = () => {\n        // 如果文件正在上传中，取消上传\n        fileList.value.forEach((item) => {\n            if (item.status === 'uploading' &&\n                item.uploadTask &&\n                item.progress > 0 &&\n                item.progress < 100) {\n                item.uploadTask.abort();\n            }\n        });\n        fileList.value = [];\n        uploadSuccessFileListChange();\n    };\n    // 点击图片预览图片\n    const previewImage = (index) => {\n        const previewImageList = fileList.value\n            .filter((item) => { return item.status === 'done'; })\n            .map((item) => { return item.url; });\n        uni.previewImage({\n            current: index,\n            urls: previewImageList,\n        });\n        emit('preview', previewImageList[index]);\n    };\n    return {\n        fileList,\n        isExceedMaxCount,\n        chooseFile,\n        retryUploadFile,\n        retryAllUpload,\n        customUploadHandle,\n        removeFileEvent,\n        clearAllFile,\n        previewImage,\n    };\n};\n//# sourceMappingURL=D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/image-upload/src/composables/use-image-upload.js.map","references":["D:/Development/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/constants/index.ts","D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/utils/index.ts","D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/form/index.ts","D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/image-upload/src/composables/use-upload-handle-function.ts","D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/image-upload/src/types.ts","D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/image-upload/src/image-upload.ts"],"uniExtApis":[],"map":"{\"version\":3,\"file\":\"use-image-upload.js\",\"sourceRoot\":\"\",\"sources\":[\"use-image-upload.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,QAAQ,EAAE,kBAAkB,EAAE,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,KAAK,CAAA;AACxE,OAAO,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAA;AACxE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAC/E,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAC3C,OAAO,uBAAuB,MAAM,8BAA8B,CAAA;AAKlE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAuB;IAC5C,MAAA,IAAI,GAAK,kBAAkB,EAAG,KAA1B,CAA0B;IAChC,MAAA,KAKF,uBAAuB,CAAC,KAAK,CAAC,EAJhC,WAAW,iBAAA,EACX,aAAa,mBAAA,EACb,yBAAyB,+BAAA,EACzB,aAAa,mBACmB,CAAA;IAE1B,MAAA,QAAQ,GAAK,WAAW,EAAE,SAAlB,CAAkB;IAElC,OAAO;IACP,MAAM,QAAQ,GAAG,GAAG,CAAkB,EAAE,CAAC,CAAA;IAEzC,WAAW;IACX,IAAI,aAAa,GAAG,KAAK,CAAA;IACzB,KAAK,CACH,QAAM,OAAA,KAAK,CAAC,UAAU,EAAhB,CAAgB,EACtB,CAAC,GAAG;QACF,IAAI,aAAa,EAAE;YACjB,aAAa,GAAG,KAAK,CAAA;YACrB,OAAM;SACP;QAED,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,OAAK,OAAA,CAAC;YAClC,GAAG,EAAE,IAAI;YACT,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,GAAG;SACd,CAAC,EAJiC,CAIjC,CAAC,CAAA;IACL,CAAC,EACD;QACE,SAAS,EAAE,IAAI;KAChB,CACF,CAAA;IAED,cAAc;IACd,MAAM,gBAAgB,GAAG,QAAQ,CAC/B,QAAM,OAAA,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,EAApC,CAAoC,CAC3C,CAAA;IACD,aAAa;IACb,MAAM,sBAAsB,GAAG,QAAQ,CAAS;QAC9C,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,OAAO,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAA;SAC3C;aAAM;YACL,OAAO,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SACvD;IACH,CAAC,CAAC,CAAA;IAEF,OAAO;IACP,MAAM,UAAU,GAAG;QACT,MAAA,QAAQ,GAAkC,KAAK,SAAvC,EAAE,MAAM,GAA0B,KAAK,OAA/B,EAAE,mBAAmB,GAAK,KAAK,oBAAV,CAAU;QACvD,IAAI,QAAQ;YAAE,OAAM;QAEpB,oCAAoC;QACpC,IAAI,CAAC,MAAM,IAAI,CAAC,mBAAmB,EAAE;YACnC,aAAa,CAAC,wBAAwB,CAAC,CAAA;YACvC,SAAS,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAA;YACpD,OAAM;SACP;QACD,aAAa;QACb,MAAM,qBAAqB,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAA;QACnD,WAAW,CAAC,sBAAsB,CAAC,KAAK,CAAC;aACtC,IAAI,CAAC,CAAC,GAAG;YACR,IAAI,UAAU,GAAG,GAAG,CAAA;YACpB,cAAc;YACd,MAAM,cAAc,GAAG,yBAAyB,CAAC,UAAU,CAAC,CAAA;YAC5D,IAAI,cAAc,CAAC,MAAM,EAAE;gBACzB,aAAa,CAAC,cAAc,CAAC,CAAA;gBAC7B,IAAI,CAAC,qBAAqB,EAAE,cAAc,CAAC,CAAA;gBAC3C,aAAa;gBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAC5B,CAAC,IAAI,OAAK,OAAA,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAA9B,CAA8B,CACzC,CAAA;aACF;YACD,QAAQ,CAAC,KAAK,CAAC,IAAI,CACjB,GAAG,UAAU,CAAC,GAAG,CAAsB,CAAC,IAAI;gBAC1C,MAAM,GAAG,GAAI,IAAoD;qBAC9D,IAAI,CAAA;gBACP,OAAO;oBACL,GAAG;oBACH,MAAM,EAAE,OAAO;oBACf,QAAQ,EAAE,CAAC;oBACX,IAAI,EAAE,IAAI;iBACX,CAAA;YACH,CAAC,CAAC,CACH,CAAA;YACD,IAAI,KAAK,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM;gBACvC,UAAU,CAAC,qBAAqB,CAAC,CAAA;QACrC,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG;YACT,SAAS,CAAC,eAAe,EAAE,WAAW,GAAG,EAAE,CAAC,CAAA;YAC5C,aAAa,CAAC,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,MAAM,KAAI,QAAQ,CAAC,CAAA;QACxC,CAAC,CAAC,CAAA;IACN,CAAC,IAAA,CAAA;IAED,SAAS;IACT,MAAM,iBAAiB,GAAG,CACxB,IAAyB,EACzB,KAAa,EACb,YAAY,GAAG,KAAK;QAEpB,aAAa,CAAC,IAAI,CAAC;aAChB,IAAI,CAAC,CAAC,GAAG;YACR,IAAI,GAAG,EAAE;gBACP,mBAAmB,CAAC,IAAI,CAAC,CAAA;aAC1B;iBAAM;gBACL,iBAAiB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;aAChC;QACH,CAAC,CAAC;aACD,KAAK,CAAC,CAAC,GAAG;YACT,iBAAiB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAC9B,CAAC,CAAC;aACD,OAAO,CAAC;YACP,IAAI,CAAC,YAAY;gBAAE,UAAU,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;IACN,CAAC,CAAA;IAED,OAAO;IACP,MAAM,UAAU,GAAG,CAAC,UAAkB,EAAE,YAAY,GAAG,KAAK;QAClD,MAAA,UAAU,GAAmB,KAAK,WAAxB,EAAE,YAAY,GAAK,KAAK,aAAV,CAAU;QAC1C,MAAM,cAAc,GAAG,UAAU,IAAI,CAAC,YAAY,CAAA;QAClD,eAAe;QACf,IAAI,UAAU,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE;YACvC,IAAI,KAAK,CAAC,mBAAmB;gBAAE,4BAA4B,EAAE,CAAA;YAC7D,OAAM;SACP;QAED,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAA;QAE3C,kBAAkB;QAClB,IAAI,QAAQ,CAAC,QAAQ,KAAK,GAAG,EAAE;YAC7B,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAA;YACxB,QAAQ,CAAC,UAAU,GAAG,SAAS,CAAA;YAC/B,IAAI,cAAc;gBAAE,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC,CAAA;YAC9C,OAAM;SACP;QAED,QAAQ;QACR,IAAI,CAAC,YAAY,EAAE;YACjB,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC,CAAA;YACrD,OAAM;SACP;QAED,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,IAAK,CAAC,CAAA;QACjD,MAAM,8BAA8B,GAAG;YACrC,SAAS,CAAC,YAAY,CAAC;YACvB,SAAS,CAAC,YAAY,CAAC;SACxB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;QAChB,IAAI,CAAC,8BAA8B,EAAE;YACnC,UAAU,CACR,iBAAiB,EACjB,oCAAoC,CACrC,CAAA;SACF;QAED,IAAI,SAAS,CAAC,YAAY,CAAC,EAAE;YAC3B,YAAY;iBACT,IAAI,CAAC,CAAC,GAAG;gBACR,IAAI,GAAG;oBAAE,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC,CAAA;qBACzD;oBACH,UAAU,CAAC,UAAU,CAAC,CAAA;oBACtB,IAAI,cAAc;wBAAE,UAAU,CAAC,UAAU,CAAC,CAAA;iBAC3C;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG;gBACT,SAAS,CAAC,eAAe,EAAE,mBAAmB,GAAG,EAAE,CAAC,CAAA;gBACpD,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAA;YAC5B,CAAC,CAAC,CAAA;SACL;aAAM;YACL,IAAI,YAAY;gBAAE,iBAAiB,CAAC,QAAQ,EAAE,UAAU,EAAE,YAAY,CAAC,CAAA;iBAClE;gBACH,UAAU,CAAC,UAAU,CAAC,CAAA;gBACtB,IAAI,cAAc;oBAAE,UAAU,CAAC,UAAU,CAAC,CAAA;aAC3C;SACF;IACH,CAAC,CAAA;IAED,eAAe;IACf,MAAM,2BAA2B,GAAG;QAClC,OAAO,QAAQ,CAAC,KAAK;aAClB,MAAM,CAAC,CAAC,IAAI,OAAK,OAAA,IAAI,CAAC,MAAM,KAAK,MAAM,EAAtB,CAAsB,CAAC;aACxC,GAAG,CAAC,CAAC,IAAI,OAAK,OAAA,IAAI,CAAC,GAAG,EAAR,CAAQ,CAAC,CAAA;IAC5B,CAAC,CAAA;IAED,cAAc;IACd,MAAM,2BAA2B,GAAG;QAClC,aAAa,GAAG,IAAI,CAAA;QACpB,MAAM,KAAK,GAAG,2BAA2B,EAAE,CAAA;QAC3C,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAA;QAC/B,QAAQ,CAAC;;YACP,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;YACzB,IAAI,KAAK,CAAC,aAAa,EAAE;gBACvB,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,QAAQ,yDAAG,QAAQ,EAAE,KAAK,CAAC,CAAC,GAAG;oBACvC,SAAS,CAAC,GAAG,CAAC,CAAA;gBAChB,CAAC,CAAC,CAAA;aACH;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAA;IAED,WAAW;IACX,MAAM,mBAAmB,GAAG,CAAC,IAAyB;QACpD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAA;QACnB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAA;QACrB,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;QACrB,2BAA2B,EAAE,CAAA;IAC/B,CAAC,CAAA;IAED,aAAa;IACb,MAAM,iBAAiB,GAAG,CAAC,IAAyB,EAAE,QAAgB;QACpE,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAA;QACtB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAA;QACjB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;QAC3B,IAAI,CAAC,IAAI,GAAG,SAAS,CAAA;QACrB,aAAa,CAAC,QAAQ,CAAC,CAAA;QACvB,IAAI,CAAC,MAAM,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAA;IACzC,CAAC,CAAA;IAED,eAAe;IACf,MAAM,4BAA4B,GAAG;QACnC,MAAM,YAAY,GAAG,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAA;QACxC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK;YAC/B,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;gBAC5B,UAAU,CAAC,KAAK,CAAC,CAAA;aAClB;QACH,CAAC,CAAC,CAAA;IACJ,CAAC,CAAA;IAED,SAAS;IACT,MAAM,eAAe,GAAG,CAAC,KAAa;QACpC,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACtC,QAAQ,CAAC,MAAM,GAAG,OAAO,CAAA;QACzB,QAAQ,CAAC,QAAQ,GAAG,CAAC,CAAA;QACrB,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;IACzB,CAAC,CAAA;IAED,WAAW;IACX,MAAM,cAAc,GAAG;QACrB,gBAAgB;QAChB,MAAM,oBAAoB,GAAG,QAAQ,CAAC,KAAK,CAAC,SAAS,CACnD,CAAC,IAAI,OAAK,OAAA,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAxB,CAAwB,CACnC,CAAA;QACD,UAAU,CAAC,oBAAoB,CAAC,CAAA;IAClC,CAAC,CAAA;IAED,SAAS;IACT,MAAM,kBAAkB,GAAG;QACzB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM;YAAE,OAAM;QAClC,UAAU,CAAC,CAAC,CAAC,CAAA;IACf,CAAC,CAAA;IAED,OAAO;IACP,MAAM,UAAU,GAAG,CAAC,KAAa;QAC/B,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QAEtC,iBAAiB;QACjB,IACE,QAAQ,CAAC,MAAM,KAAK,WAAW;YAC/B,QAAQ,CAAC,UAAU;YACnB,QAAQ,CAAC,QAAQ,GAAG,CAAC;YACrB,QAAQ,CAAC,QAAQ,GAAG,GAAG,EACvB;YACA,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,CAAA;SAC5B;QAED,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;QAE/B,4BAA4B;QAC5B,IAAI,QAAQ,CAAC,MAAM,KAAK,MAAM,EAAE;YAC9B,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAA;YAC5B,2BAA2B,EAAE,CAAA;SAC9B;IACH,CAAC,CAAA;IAED,OAAO;IACP,MAAM,eAAe,GAAG,CAAC,KAAa;QAC5B,MAAA,QAAQ,GAAmB,KAAK,SAAxB,EAAE,YAAY,GAAK,KAAK,aAAV,CAAU;QACxC,IAAI,QAAQ;YAAE,OAAM;QACpB,WAAW;QACX,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACtC,IAAI,CAAC,QAAQ;YAAE,OAAM;QAErB,GAAG,CAAC,SAAS,CAAC;YACZ,KAAK,EAAE,MAAM;YACb,OAAO,EAAE,aAAa;YACtB,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,KAAK;YAClB,OAAO,EAAE,CAAC,GAAG;gBACX,IAAI,GAAG,CAAC,OAAO,EAAE;oBACf,QAAQ;oBACR,IAAI,CAAC,YAAY,EAAE;wBACjB,UAAU,CAAC,KAAK,CAAC,CAAA;wBACjB,OAAM;qBACP;oBAED,MAAM,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAA;oBAC3C,MAAM,8BAA8B,GAAG;wBACrC,SAAS,CAAC,YAAY,CAAC;wBACvB,SAAS,CAAC,YAAY,CAAC;qBACxB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;oBAChB,IAAI,CAAC,8BAA8B,EAAE;wBACnC,UAAU,CACR,iBAAiB,EACjB,oCAAoC,CACrC,CAAA;qBACF;oBAED,IAAI,SAAS,CAAC,YAAY,CAAC,EAAE;wBAC3B,YAAY;6BACT,IAAI,CAAC,CAAC,GAAG;4BACR,IAAI,GAAG;gCAAE,UAAU,CAAC,KAAK,CAAC,CAAA;wBAC5B,CAAC,CAAC;6BACD,KAAK,CAAC,CAAC,GAAG;4BACT,SAAS,CAAC,eAAe,EAAE,mBAAmB,GAAG,EAAE,CAAC,CAAA;wBACtD,CAAC,CAAC,CAAA;qBACL;yBAAM;wBACL,IAAI,YAAY;4BAAE,UAAU,CAAC,KAAK,CAAC,CAAA;qBACpC;iBACF;YACH,CAAC;SACF,CAAC,CAAA;IACJ,CAAC,CAAA;IAED,SAAS;IACT,MAAM,YAAY,GAAG;QACnB,iBAAiB;QACjB,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;YAC1B,IACE,IAAI,CAAC,MAAM,KAAK,WAAW;gBAC3B,IAAI,CAAC,UAAU;gBACf,IAAI,CAAC,QAAQ,GAAG,CAAC;gBACjB,IAAI,CAAC,QAAQ,GAAG,GAAG,EACnB;gBACA,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAA;aACxB;QACH,CAAC,CAAC,CAAA;QACF,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAA;QACnB,2BAA2B,EAAE,CAAA;IAC/B,CAAC,CAAA;IAED,WAAW;IACX,MAAM,YAAY,GAAG,CAAC,KAAa;QACjC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,KAAK;aACpC,MAAM,CAAC,CAAC,IAAI,OAAK,OAAA,IAAI,CAAC,MAAM,KAAK,MAAM,EAAtB,CAAsB,CAAC;aACxC,GAAG,CAAC,CAAC,IAAI,OAAK,OAAA,IAAI,CAAC,GAAG,EAAR,CAAQ,CAAC,CAAA;QAE1B,GAAG,CAAC,YAAY,CAAC;YACf,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,gBAAgB;SACvB,CAAC,CAAA;QAEF,IAAI,CAAC,SAAS,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAA;IAC1C,CAAC,CAAA;IAED,OAAO;QACL,QAAQ;QACR,gBAAgB;QAChB,UAAU;QACV,eAAe;QACf,cAAc;QACd,kBAAkB;QAClB,eAAe;QACf,YAAY;QACZ,YAAY;KACb,CAAA;AACH,CAAC,CAAA\"}"}
