{"version":3,"file":"use-modal.js","sources":["uni_modules/tuniaoui-vue3/components/modal/src/composables/use-modal.ts"],"sourcesContent":["import { ref } from 'vue'\r\nimport {\r\n  isBoolean,\r\n  isEmptyVariableInDefault,\r\n  isPromise,\r\n} from '../../../../utils'\r\n\r\nimport type { ModalOptions } from '../modal'\r\n\r\nexport const useModal = () => {\r\n  const openModal = ref(false)\r\n\r\n  // 弹框标题\r\n  const title = ref<Required<ModalOptions>['title']>('')\r\n\r\n  // 弹框内容\r\n  const content = ref<Required<ModalOptions>['content']>('')\r\n\r\n  // 是否显示取消按钮\r\n  const showCancel = ref<Required<ModalOptions>['showCancel']>(false)\r\n\r\n  // 取消按钮的文字\r\n  const cancelText = ref<Required<ModalOptions>['cancelText']>('')\r\n\r\n  // 取消按钮的样式\r\n  const cancelStyle = ref<Required<ModalOptions>['cancelStyle']>({})\r\n\r\n  // 确认按钮的文字\r\n  const confirmText = ref<Required<ModalOptions>['confirmText']>('')\r\n\r\n  // 确认按钮的样式\r\n  const confirmStyle = ref<Required<ModalOptions>['confirmStyle']>({})\r\n\r\n  // 是否显示遮罩\r\n  const mask = ref<Required<ModalOptions>['mask']>(true)\r\n\r\n  // 是否允许点击遮罩关闭\r\n  const maskClosable = ref<Required<ModalOptions>['maskClosable']>(false)\r\n\r\n  // 点击取消按钮触发的回调函数\r\n  const cancelFunc = ref<ModalOptions['cancel']>(undefined)\r\n\r\n  // 点击确认按钮触发的回调函数\r\n  const confirmFunc = ref<ModalOptions['confirm']>(undefined)\r\n\r\n  // 打开弹窗\r\n  const showModal = (options: ModalOptions) => {\r\n    openModal.value = true\r\n\r\n    title.value = isEmptyVariableInDefault(options.title, '')\r\n    content.value = options.content\r\n\r\n    showCancel.value = isEmptyVariableInDefault(options?.showCancel, false)\r\n    cancelText.value = isEmptyVariableInDefault(options?.cancelText, '取 消')\r\n    cancelStyle.value = isEmptyVariableInDefault(options?.cancelStyle, {})\r\n    confirmText.value = isEmptyVariableInDefault(options?.confirmText, '确 认')\r\n    confirmStyle.value = isEmptyVariableInDefault(options?.confirmStyle, {})\r\n    mask.value = isEmptyVariableInDefault(options?.mask, true)\r\n    maskClosable.value = isEmptyVariableInDefault(options?.maskClosable, false)\r\n    cancelFunc.value = options?.cancel\r\n    confirmFunc.value = options?.confirm\r\n  }\r\n\r\n  // 关闭弹窗\r\n  const closeModal = () => {\r\n    openModal.value = false\r\n  }\r\n\r\n  // 点击取消按钮\r\n  const clickCancel = () => {\r\n    if (!cancelFunc.value) {\r\n      closeModal()\r\n      return\r\n    }\r\n\r\n    const func = cancelFunc.value()\r\n\r\n    const isPromiseOrBool = [isPromise(func), isBoolean(func)].includes(true)\r\n\r\n    if (!isPromiseOrBool) {\r\n      // 传递的是普通函数\r\n      closeModal()\r\n      return\r\n    }\r\n\r\n    if (isPromise(func)) {\r\n      func\r\n        .then((res) => {\r\n          if (res) closeModal()\r\n        })\r\n        .catch((err) => {\r\n          // eslint-disable-next-line no-console\r\n          console.warn(`[TnModal] some error occured: ${err}`)\r\n        })\r\n    } else if (func) {\r\n      closeModal()\r\n    }\r\n  }\r\n\r\n  // 点击确认按钮\r\n  const clickConfirm = () => {\r\n    if (!confirmFunc.value) {\r\n      closeModal()\r\n      return\r\n    }\r\n\r\n    const func = confirmFunc.value()\r\n\r\n    const isPromiseOrBool = [isPromise(func), isBoolean(func)].includes(true)\r\n\r\n    if (!isPromiseOrBool) {\r\n      // 传递的是普通函数\r\n      closeModal()\r\n      return\r\n    }\r\n\r\n    if (isPromise(func)) {\r\n      func\r\n        .then((res) => {\r\n          if (res) closeModal()\r\n        })\r\n        .catch((err) => {\r\n          // eslint-disable-next-line no-console\r\n          console.warn(`[TnModal] some error occured: ${err}`)\r\n        })\r\n    } else if (func) {\r\n      closeModal()\r\n    }\r\n  }\r\n\r\n  return {\r\n    openModal,\r\n    showModal,\r\n    title,\r\n    content,\r\n    showCancel,\r\n    cancelText,\r\n    cancelStyle,\r\n    confirmText,\r\n    confirmStyle,\r\n    mask,\r\n    maskClosable,\r\n    cancelFunc,\r\n    confirmFunc,\r\n    clickCancel,\r\n    clickConfirm,\r\n  }\r\n}\r\n"],"names":["ref","isEmptyVariableInDefault","isPromise","isBoolean","uni"],"mappings":"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"}