{"version":3,"file":"use-form.js","sources":["uni_modules/tuniaoui-vue3/components/form/src/composables/use-form.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { filterFields } from '../utils'\nimport { isFunction } from '../../../../utils'\n\nimport type { ValidateFieldsError } from '../../../../libs/async-validator'\nimport type { FormItemProp } from '../form-item'\nimport type { FormProps } from '../form'\nimport type {\n  FormContext,\n  FormItemContext,\n  FormValidationCallback,\n  FormValidationResult,\n} from '../types'\nimport type { Arrayable } from '../../../../utils'\n\nexport const useForm = (props: FormProps) => {\n  // formItem信息\n  const fields: FormItemContext[] = []\n\n  // 添加formItem信息\n  const addField: FormContext['addField'] = (field) => {\n    fields.push(field)\n  }\n\n  // 移除formItem信息\n  const removeField: FormContext['removeField'] = (field) => {\n    if (field.prop) {\n      fields.splice(fields.indexOf(field), 1)\n    }\n  }\n\n  // 重置formItem\n  const resetFields: FormContext['resetFields'] = (properties = []) => {\n    if (!props.model) {\n      // eslint-disable-next-line no-console\n      return console.warn('[TnForm] model参数未定义')\n    }\n    filterFields(fields, properties).forEach((field) => field.resetField())\n  }\n\n  // 清除formItem验证\n  const clearValidate: FormContext['clearValidate'] = (props = []) => {\n    filterFields(fields, props).forEach((field) => field.clearValidate())\n  }\n\n  // 是否可以进行校验\n  const isValidatable = computed(() => {\n    const hasModel = !!props.model\n    if (!hasModel) {\n      // eslint-disable-next-line no-console\n      console.warn('[TnForm] model参数未定义')\n    }\n    return hasModel\n  })\n\n  // 获取需要校验的字段\n  const obtainValidateFields = (props: Arrayable<FormItemProp>) => {\n    if (fields.length === 0) return []\n\n    const filteredFields = filterFields(fields, props)\n    if (!filteredFields.length) {\n      // eslint-disable-next-line no-console\n      console.warn('[TnForm] 未找到需要校验的字段')\n      return []\n    }\n    return filteredFields\n  }\n\n  // 校验\n  const validate = async (\n    callback?: FormValidationCallback\n  ): FormValidationResult => validateField(undefined, callback)\n\n  // 开始校验字段\n  const doValidateField = async (\n    props: Arrayable<FormItemProp>\n  ): Promise<boolean> => {\n    if (!isValidatable.value) return false\n\n    const fields = obtainValidateFields(props)\n    if (fields.length === 0) return false\n\n    let validationErrors: ValidateFieldsError = {}\n    for (const field of fields) {\n      try {\n        await field.validate('')\n      } catch (fields) {\n        validationErrors = {\n          ...validationErrors,\n          ...(fields as ValidateFieldsError),\n        }\n      }\n    }\n\n    if (Object.keys(validationErrors).length === 0) return true\n    return Promise.reject(validationErrors)\n  }\n\n  // 校验字段\n  const validateField: FormContext['validateField'] = async (\n    modelProps = [],\n    callback\n  ) => {\n    const shouldThrow = !isFunction(callback)\n    try {\n      const result = await doValidateField(modelProps)\n      // 如果结果为false则说明当前校验不通过\n      if (result === true) {\n        callback?.(true)\n      }\n      return result\n    } catch (e) {\n      if (e instanceof Error) throw e\n\n      const invalidFields = e as ValidateFieldsError\n\n      callback?.(false, invalidFields)\n      return shouldThrow && Promise.reject(invalidFields)\n    }\n  }\n\n  return {\n    addField,\n    removeField,\n    resetFields,\n    clearValidate,\n    validate,\n    validateField,\n  }\n}\n"],"names":["uni","filterFields","props","computed","__awaiter","fields","__values","isFunction"],"mappings":"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"}