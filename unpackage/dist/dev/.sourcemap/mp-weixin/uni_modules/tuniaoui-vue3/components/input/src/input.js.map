{"version":3,"file":"input.js","sources":["uni_modules/tuniaoui-vue3/components/input/src/input.ts","uni_modules/tuniaoui-vue3/components/input/src/input.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovRGV2ZWxvcG1lbnQvcHJvamVjdC93YWxscGFwZXItc2hhcmUtd3gvdW5pX21vZHVsZXMvdHVuaWFvdWktdnVlMy9jb21wb25lbnRzL2lucHV0L3NyYy9pbnB1dC52dWU"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  isNumber,\n  isObject,\n  isString,\n} from '../../../utils'\nimport {\n  useComponentCustomStyleProp,\n  useFormSizeProps,\n} from '../../base/composables/use-component-common-props'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '../../../constants'\n\nimport type { ExtractPropTypes } from 'vue'\n\nconst inputTypes = [\n  'text',\n  'number',\n  'idcard',\n  'digit',\n  'textarea',\n  'password',\n  'select',\n] as const\n\nconst inputConfirmTypes = [\n  '',\n  'send',\n  'search',\n  'next',\n  'go',\n  'done',\n  'return',\n] as const\n\nexport const inputProps = buildProps({\n  /**\n   * @description 绑定的值\n   */\n  modelValue: {\n    type: definePropType<string | number | null | undefined>([\n      String,\n      Number,\n      Object,\n    ]),\n    default: '',\n  },\n  /**\n   * @description 输入框尺寸\n   */\n  size: useFormSizeProps,\n  /**\n   * @description 输入框高度\n   */\n  height: {\n    type: [String, Number],\n  },\n  /**\n   * @description 是否禁用\n   */\n  disabled: Boolean,\n  /**\n   * @description 输入框类型\n   */\n  type: {\n    type: String,\n    values: inputTypes,\n    default: 'text',\n  },\n  /**\n   * @description 输入框占位文本\n   */\n  placeholder: String,\n  /**\n   * @description 文字对齐方式\n   */\n  textAlign: {\n    type: String,\n    values: ['left', 'center', 'right'],\n    default: 'left',\n  },\n  /**\n   * @description 输入框占位文本的样式\n   */\n  placeholderStyle: useComponentCustomStyleProp,\n  /**\n   * @description 是否显示边框\n   */\n  border: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description 边框颜色\n   */\n  borderColor: {\n    type: String,\n    default: 'tn-gray-disabled',\n  },\n  /**\n   * @description 下划线边框\n   */\n  underline: Boolean,\n  /**\n   * @description 自定义样式\n   */\n  customStyle: useComponentCustomStyleProp,\n  /**\n   * @description 自定义类名\n   */\n  customClass: String,\n  /**\n   * @description 最大可输入长度，设置为 -1 的时候不限制最大长度\n   */\n  maxlength: {\n    type: Number,\n    default: -1,\n  },\n  /**\n   * @description 根据内容自动调整高度，仅在 textarea 模式下生效，如果设置了 height 则优先级最高\n   */\n  autoHeight: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description 设置键盘右下角按钮的文字，仅在使用系统键盘时生效\n   */\n  confirmType: {\n    type: String,\n    values: inputConfirmTypes,\n    default: 'done',\n  },\n  /**\n   * @description 获取焦点\n   */\n  focus: Boolean,\n  /**\n   * @description 是否展示清除按钮\n   */\n  clearable: Boolean,\n  /**\n   * @description 是否显示切换密码显示/隐藏按钮，仅在 type=\"password\" 时生效\n   */\n  showPassword: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description 指定光标与键盘的距离，单位 px\n   */\n  cursorSpacing: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description 光标起始位置，自动聚集时有效，需与selection-end搭配使用\n   */\n  selectionStart: {\n    type: Number,\n    default: -1,\n  },\n  /**\n   * @description 光标结束位置，自动聚集时有效，需与selection-start搭配使用\n   */\n  selectionEnd: {\n    type: Number,\n    default: -1,\n  },\n  /**\n   * @description 是否展示键盘上方带有”完成“按钮那一栏\n   */\n  showConfirmBar: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description 显示输入框右图标\n   */\n  rightIcon: String,\n  /**\n   * @description 自动去除两端空格\n   */\n  trim: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description 显示字数统计，只有在 textarea 模式下且设置maxlength时生效\n   */\n  showWordLimit: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description 字数统计文字颜色，以tn开头使用图鸟内置的颜色\n   */\n  wordLimitColor: String,\n  /**\n   * @description 输入时是否触发表单验证\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n})\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string | number) =>\n    isString(value) || isNumber(value),\n  /**\n   * @description 输入框输入内容时触发\n   */\n  [INPUT_EVENT]: (value: string | number) => isString(value) || isNumber(value),\n  /**\n   * @description 输入框内容变化时触发\n   */\n  [CHANGE_EVENT]: (value: string | number) =>\n    isString(value) || isNumber(value),\n  /**\n   * @description 输入框点击时触发\n   */\n  click: () => true,\n  /**\n   * @description 输入框聚焦时触发\n   */\n  focus: (e: InputFocusEvent) => isObject(e),\n  /**\n   * @description 输入框失去焦点时触发\n   */\n  blur: (e: InputBlurEvent) => isObject(e),\n  /**\n   * @description 点击清除按钮时触发\n   */\n  clear: () => true,\n  /**\n   * @description 点击键盘右下角按钮时触发\n   */\n  confirm: (value: string | number) => isString(value) || isNumber(value),\n}\n\nexport type InputProps = ExtractPropTypes<typeof inputProps>\nexport type InputEmit = typeof inputEmits\n\nexport type InputType = (typeof inputTypes)[number]\nexport type InputConfirmType = (typeof inputConfirmTypes)[number]\n\n/**\n * @description 输入框聚焦事件\n */\nexport interface InputFocusEvent {\n  detail: {\n    /**\n     * @description 输入框内容\n     */\n    value: string\n    /**\n     * @description 键盘高度\n     */\n    height: number\n  }\n}\n\n/**\n * @description 输入框失去焦点事件\n */\nexport interface InputBlurEvent {\n  detail: {\n    /**\n     * @description 输入框内容\n     */\n    value: string\n  }\n}\n","<script lang=\"uts\" setup>\nimport TnIcon from '../../icon/src/icon.vue'\nimport { inputEmits, inputProps } from './input'\nimport { useInput, useInputCustomStyle } from './composables'\n\nconst props = defineProps(inputProps)\nconst emits = defineEmits(inputEmits)\n\nconst {\n  inputText,\n  needStatusIcon,\n  validateState,\n  validateIcon,\n  passwordVisible,\n  passwordIcon,\n  showIcon,\n  disabled,\n  showWordLimit,\n  currentWordCount,\n  togglePasswordVisible,\n  inputInputEvent,\n  inputFocusEvent,\n  inputBlurEvent,\n  clearClickEvent,\n  confirmEvent,\n  inputClickEvent,\n} = useInput(props, emits)\nconst {\n  ns,\n  inputClass,\n  inputStyle,\n  placeholderStyle,\n  wordLimitClass,\n  wordLimitStyle,\n} = useInputCustomStyle(props, validateState, disabled)\n</script>\n\n<template>\n  <view\n    :class=\"[\n      inputClass,\n      `${type === 'textarea' ? ns.m('textarea') : ns.m('input')}`,\n      ns.is('show-word-limit', showWordLimit),\n    ]\"\n    :style=\"inputStyle\"\n    @tap=\"inputClickEvent\"\n  >\n    <view v-if=\"$slots.prefix\" :class=\"[ns.em('slot', 'left')]\">\n      <slot name=\"prefix\" />\n    </view>\n    <!-- 文本域 -->\n    <textarea\n      v-if=\"type === 'textarea'\"\n      :class=\"[\n        ns.e('base'),\n        ns.e('textarea'),\n        ns.is('custom-height', !!height),\n      ]\"\n      :value=\"inputText\"\n      :placeholder=\"placeholder\"\n      :placeholder-style=\"placeholderStyle\"\n      :disabled=\"disabled\"\n      :maxlength=\"maxlength\"\n      :focus=\"focus\"\n      :confirm-type=\"confirmType\"\n      :auto-height=\"!height && autoHeight\"\n      :selection-start=\"selectionStart\"\n      :selection-end=\"selectionEnd\"\n      :cursor-spacing=\"cursorSpacing\"\n      :show-confirm-bar=\"showConfirmBar\"\n      @input=\"inputInputEvent\"\n      @focus=\"inputFocusEvent\"\n      @blur=\"inputBlurEvent\"\n      @confirm=\"confirmEvent\"\n    />\n\n    <!-- 文本框 -->\n    <input\n      v-else\n      :class=\"[ns.e('base'), ns.e('input'), ns.em('input', type)]\"\n      :type=\"type === 'password' || type === 'select' ? 'text' : type\"\n      :value=\"inputText\"\n      :placeholder=\"placeholder\"\n      :password=\"type === 'password' && !passwordVisible\"\n      :placeholder-style=\"placeholderStyle\"\n      :disabled=\"disabled || type === 'select'\"\n      :maxlength=\"maxlength\"\n      :focus=\"focus\"\n      :confirm-type=\"confirmType\"\n      :selection-start=\"selectionStart\"\n      :selection-end=\"selectionEnd\"\n      :cursor-spacing=\"cursorSpacing\"\n      :show-confirm-bar=\"showConfirmBar\"\n      @input=\"inputInputEvent\"\n      @focus=\"inputFocusEvent\"\n      @blur=\"inputBlurEvent\"\n      @confirm=\"confirmEvent\"\n    />\n    <!-- 图标 -->\n    <view v-if=\"showIcon\" :class=\"[ns.e('icon')]\">\n      <!-- 右边图标 -->\n      <view v-if=\"rightIcon\" :class=\"[ns.em('icon', 'custom')]\">\n        <TnIcon :name=\"rightIcon\" />\n      </view>\n      <!-- 密码显示/隐藏 -->\n      <view\n        v-if=\"type === 'password' && showPassword\"\n        :class=\"[ns.em('icon', 'password')]\"\n        @tap.stop=\"togglePasswordVisible\"\n      >\n        <TnIcon :name=\"passwordIcon\" />\n      </view>\n      <!-- 清除按钮 -->\n      <view\n        v-else-if=\"clearable && inputText\"\n        :class=\"[ns.em('icon', 'clear')]\"\n        @tap.stop=\"clearClickEvent\"\n      >\n        <TnIcon name=\"close\" />\n      </view>\n      <!-- 错误提示图标 -->\n      <view\n        v-if=\"validateState && validateIcon && needStatusIcon\"\n        :class=\"[ns.em('icon', `validate-${validateState}`)]\"\n      >\n        <TnIcon :name=\"validateIcon\" />\n      </view>\n    </view>\n    <view v-if=\"$slots.suffix\" :class=\"[ns.em('slot', 'right')]\">\n      <slot name=\"suffix\" />\n    </view>\n\n    <!-- 字数统计 -->\n    <view\n      v-if=\"showWordLimit\"\n      :class=\"[wordLimitClass]\"\n      :style=\"wordLimitStyle\"\n    >\n      {{ currentWordCount }} / {{ maxlength }}\n    </view>\n  </view>\n</template>\n\n<style lang=\"scss\" scoped>\n@import '../../../theme-chalk/src/input.scss';\n</style>\n","import Component from 'D:/Development/project/wallpaper-share-wx/uni_modules/tuniaoui-vue3/components/input/src/input.vue'\nwx.createComponent(Component)"],"names":["buildProps","definePropType","useFormSizeProps","useComponentCustomStyleProp","UPDATE_MODEL_EVENT","isString","isNumber","INPUT_EVENT","CHANGE_EVENT","isObject","useInput","useInputCustomStyle"],"mappings":"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"}