{"version":3,"file":"use-form-item-operation.js","sources":["uni_modules/tuniaoui-vue3/components/form/src/composables/use-form-item-operation.ts"],"sourcesContent":["import { computed, inject, nextTick, ref, watch } from 'vue'\nimport AsyncValidator from '../../../../libs/async-validator'\nimport { castArray, debounce } from '../../../../libs/lodash'\nimport { formContextKey } from '../../../../tokens'\nimport {\n  cloneDeep,\n  getProp,\n  isEmptyVariableInDefault,\n  isFunction,\n  isString,\n} from '../../../../utils'\n\nimport type { Slots } from 'vue'\nimport type { RuleItem } from '../../../../libs/async-validator'\nimport type { FormItemProps, FormItemValidateStates } from '../form-item'\nimport type {\n  FormItemContext,\n  FormItemRule,\n  FormValidateFailure,\n} from '../types'\nimport type { Arrayable } from '../../../../utils'\n\nexport const useFormItemOperation = (props: FormItemProps, slots: Slots) => {\n  const formContext = inject(formContextKey, undefined)\n\n  // 初始化的值\n  let initialValue: any = undefined\n  // 是否重置字段校验\n  let isResettingField = false\n\n  // 校验状态\n  const validateState = ref<FormItemValidateStates>('')\n  const validateStateDebounced = ref<FormItemValidateStates>('')\n\n  // 错误信息\n  const validateMessage = ref('')\n\n  // 是否有标签\n  const hasLabel = computed(() => {\n    return !!(props.label || slots.label)\n  })\n\n  // 当前标签的值\n  const currentLabel = computed(\n    () => `${props.label || ''}${formContext?.labelSuffix || ''}`\n  )\n\n  // formItem field字段名称\n  const fieldValue = computed(() => {\n    const model = formContext?.model\n    if (!model || !props.prop) {\n      return\n    }\n    return getProp(model, props.prop).value\n  })\n\n  // formItem prop字段名称\n  const propString = computed(() => {\n    if (!props.prop) return ''\n    return isString(props.prop) ? props.prop : props.prop.join('.')\n  })\n\n  // 校验规则\n  const normalizedRules = computed(() => {\n    const rules: FormItemRule[] = []\n    // 如果设置了rules，则直接使用rules\n    if (props.rules) rules.push(...castArray(props.rules))\n\n    // 如果设置了prop，则根据prop从formContext中获取rules\n    const formRules = formContext?.rules\n    if (formRules && props.prop) {\n      const _rules = getProp<Arrayable<FormItemRule> | undefined>(\n        formRules,\n        props.prop\n      ).value\n      if (_rules) rules.push(...castArray(_rules))\n    }\n\n    // 如果设置了required，则根据required的值来设置校验规则\n    if (props.required !== undefined) {\n      const requiredRules = rules\n        .map((rule, index) => [rule, index] as const)\n        .filter(([rule]) => Object.keys(rule).includes('required'))\n      if (requiredRules.length) {\n        for (const [rule, index] of requiredRules) {\n          if (rule.required === props.required) continue\n          rules[index] = { ...rule, required: props.required }\n        }\n      } else {\n        rules.push({ required: props.required })\n      }\n    }\n\n    return rules\n  })\n\n  // 是否需要校验（开启校验）\n  const validateEnabled = computed(() => normalizedRules.value.length > 0)\n\n  // 是否为必填\n  const isRequired = computed(() =>\n    normalizedRules.value.some((rule) => rule.required)\n  )\n\n  // 是否显示错误信息\n  const shouldShowError = computed(\n    () =>\n      validateStateDebounced.value === 'error' &&\n      props.showMessage &&\n      isEmptyVariableInDefault(formContext?.showMessage, true)\n  )\n\n  // 设置校验状态\n  const setValidateState = (state: FormItemValidateStates) => {\n    validateState.value = state\n  }\n\n  // 获取校验规则\n  const getFilterRule = (trigger: string) => {\n    const rules = normalizedRules.value\n    return (\n      rules\n        .filter((rule) => {\n          if (!rule.trigger || !trigger) return true\n          if (Array.isArray(rule.trigger)) {\n            return rule.trigger.includes(trigger)\n          } else {\n            return rule.trigger === trigger\n          }\n        })\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        .map(({ trigger, ...rule }): RuleItem => rule)\n    )\n  }\n\n  // 校验失败\n  const onValidationFailed = (error: FormValidateFailure) => {\n    const { errors, fields } = error\n    if (!errors || !fields) {\n      console.error(error)\n    }\n\n    setValidateState('error')\n    validateMessage.value = errors\n      ? isEmptyVariableInDefault(errors?.[0]?.message, `${props.prop} 为必填项`)\n      : ''\n\n    formContext?.emits('validate', props.prop!, false, validateMessage.value)\n  }\n\n  // 校验通过\n  const onValidationSucceded = () => {\n    setValidateState('success')\n    validateMessage.value = ''\n\n    formContext?.emits('validate', props.prop!, true, '')\n  }\n\n  // 进行校验操作\n  const doValidate = async (rules: RuleItem[]): Promise<true> => {\n    const modelName = propString.value\n    const validator = new AsyncValidator({\n      [modelName]: rules,\n    })\n    return validator\n      .validate({ [modelName]: fieldValue.value }, { firstFields: true })\n      .then(() => {\n        onValidationSucceded()\n        return true as const\n      })\n      .catch((err: FormValidateFailure) => {\n        onValidationFailed(err as FormValidateFailure)\n        return Promise.reject(err)\n      })\n  }\n\n  // 校验\n  const validate: FormItemContext['validate'] = async (trigger, callback) => {\n    // 重置字段后跳过校验\n    if (isResettingField || !props.prop) return false\n\n    const hasCallback = isFunction(callback)\n    if (!validateEnabled.value) {\n      callback?.(false)\n      return false\n    }\n\n    const rules = getFilterRule(trigger)\n    if (rules.length === 0) {\n      callback?.(true)\n      return true\n    }\n\n    setValidateState('validating')\n\n    return doValidate(rules)\n      .then(() => {\n        callback?.(true)\n        return true as const\n      })\n      .catch((err: FormValidateFailure) => {\n        const { fields } = err\n        callback?.(false, fields)\n        return hasCallback ? false : Promise.reject(fields)\n      })\n  }\n\n  // 清除校验信息\n  const clearValidate: FormItemContext['clearValidate'] = () => {\n    setValidateState('')\n    validateMessage.value = ''\n    isResettingField = false\n  }\n\n  // 重置字段\n  const resetField: FormItemContext['resetField'] = async () => {\n    const model = formContext?.model\n    if (!model || !props.prop) return\n\n    const computedValue = getProp(model, props.prop)\n\n    // 阻止触发校验\n    isResettingField = true\n\n    computedValue.value = cloneDeep(initialValue)\n\n    await nextTick()\n    clearValidate()\n\n    isResettingField = false\n  }\n\n  // 设置初始化的值\n  const initFieldValue = () => {\n    initialValue = cloneDeep(fieldValue.value)\n  }\n\n  const validateStateDebouncedUpdater = debounce(() => {\n    validateStateDebounced.value = validateState.value\n  }, 100)\n  watch(\n    () => validateState.value,\n    () => validateStateDebouncedUpdater()\n  )\n\n  watch(\n    () => props.error,\n    (val) => {\n      validateMessage.value = val || ''\n      setValidateState(val ? 'error' : '')\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  watch(\n    () => props.validateStatus,\n    (val) => {\n      setValidateState(val || '')\n    }\n  )\n\n  return {\n    formContext,\n    hasLabel,\n    currentLabel,\n    validateState,\n    validateMessage,\n    isRequired,\n    shouldShowError,\n    doValidate,\n    validate,\n    clearValidate,\n    resetField,\n    initFieldValue,\n  }\n}\n"],"names":["inject","formContextKey","ref","computed","getProp","isString","castArray","rule","index","_a","_b","__read","__values","isEmptyVariableInDefault","__rest","uni","__awaiter","AsyncValidator","isFunction","cloneDeep","nextTick","debounce","watch"],"mappings":"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"}